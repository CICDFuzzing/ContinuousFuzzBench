diff --git a/src/pragma.c b/src/pragma.c
index c5b5bb667..a882e2307 100644
--- a/src/pragma.c
+++ b/src/pragma.c
@@ -1645,9 +1645,16 @@ void sqlite3Pragma(
           if( j==pTab->iPKey ) continue;
           if( pTab->aCol[j].notNull==0 ) continue;
           sqlite3ExprCodeGetColumnOfTable(v, pTab, iDataCur, j, 3);
-          if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ){
+#ifdef MAGMA_ENABLE_FIXES
+          if( sqlite3VdbeGetOp(v,-1)->opcode==OP_Column ) {
+#endif
             sqlite3VdbeChangeP5(v, OPFLAG_TYPEOFARG);
+#ifdef MAGMA_ENABLE_FIXES
           }
+#endif 
+#ifdef MAGMA_ENABLE_CANARIES
+          MAGMA_LOG("JCH226", sqlite3VdbeGetOp(v,-1)->opcode==OP_Column);
+#endif
           jmp2 = sqlite3VdbeAddOp1(v, OP_NotNull, 3); VdbeCoverage(v);
           zErr = sqlite3MPrintf(db, "NULL value in %s.%s", pTab->zName,
                               pTab->aCol[j].zName);
diff --git a/src/resolve.c b/src/resolve.c
index e90e8a768..d7ab41613 100644
--- a/src/resolve.c
+++ b/src/resolve.c
@@ -647,9 +647,10 @@ Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){
       p->iColumn = -1;
     }else{
       p->iColumn = (ynVar)iCol;
+#ifdef MAGMA_ENABLE_FIXES
       if( (pTab->tabFlags & TF_HasGenerated)!=0
        && (pTab->aCol[iCol].colFlags & COLFLAG_GENERATED)!=0
-      ){
+      ){  
         testcase( pTab->nCol==63 );
         testcase( pTab->nCol==64 );
         pItem->colUsed = pTab->nCol>=64 ? ALLBITS : MASKBIT(pTab->nCol)-1;
@@ -658,6 +659,11 @@ Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){
         testcase( iCol==BMS-1 );
         pItem->colUsed |= ((Bitmask)1)<<(iCol>=BMS ? BMS-1 : iCol);
       }
+#else
+      testcase( iCol==BMS );
+      testcase( iCol==BMS-1 );
+      pItem->colUsed |= ((Bitmask)1)<<(iCol>=BMS ? BMS-1 : iCol);
+#endif
     }
   }
   return p;
