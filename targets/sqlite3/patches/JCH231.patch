diff --git a/src/expr.c b/src/expr.c
index e58889737..506986f89 100644
--- a/src/expr.c
+++ b/src/expr.c
@@ -5508,13 +5508,23 @@ static int impliesNotNullRow(Walker *pWalker, Expr *pExpr){
       testcase( pExpr->op==TK_GE );
       /* The y.pTab=0 assignment in wherecode.c always happens after the
       ** impliesNotNullRow() test */
+#ifdef MAGMA_ENABLE_FIXES
       if( (pLeft->op==TK_COLUMN && ALWAYS(pLeft->y.pTab!=0)
                                && IsVirtual(pLeft->y.pTab))
        || (pRight->op==TK_COLUMN && ALWAYS(pRight->y.pTab!=0)
                                && IsVirtual(pRight->y.pTab))
-      ){
+      )
+#else
+      if( (pExpr->pLeft->op==TK_COLUMN && IsVirtual(pExpr->pLeft->y.pTab))
+       || (pExpr->pRight->op==TK_COLUMN && IsVirtual(pExpr->pRight->y.pTab))
+      )
+#endif
+       {
         return WRC_Prune;
       }
+#ifdef MAGMA_ENABLE_CANARIES
+      MAGMA_LOG("JCH231", pLeft->y.pTab==0 | pRight->y.pTab==0);
+#endif
     }
     default:
       return WRC_Continue;
diff --git a/src/whereexpr.c b/src/whereexpr.c
index 3c91fc353..3efc0e4d1 100644
--- a/src/whereexpr.c
+++ b/src/whereexpr.c
@@ -378,7 +378,11 @@ static int isAuxiliaryVtabOperator(
     */
     pCol = pList->a[1].pExpr;
     testcase( pCol->op==TK_COLUMN && pCol->y.pTab==0 );
+#ifdef MAGMA_ENABLE_FIXES
     if( ExprIsVtab(pCol) ){
+#else        
+    if( pCol->op==TK_COLUMN && IsVirtual(pCol->y.pTab) ){
+#endif
       for(i=0; i<ArraySize(aOp); i++){
         if( sqlite3StrICmp(pExpr->u.zToken, aOp[i].zOp)==0 ){
           *peOp2 = aOp[i].eOp2;
@@ -388,6 +392,9 @@ static int isAuxiliaryVtabOperator(
         }
       }
     }
+#ifdef MAGMA_ENABLE_CANARIES
+    MAGMA_LOG("JCH231", pCol->y.pTab==0);
+#endif    
 
     /* We can also match against the first column of overloaded
     ** functions where xFindFunction returns a value of at least
@@ -401,7 +408,11 @@ static int isAuxiliaryVtabOperator(
     */
     pCol = pList->a[0].pExpr;
     testcase( pCol->op==TK_COLUMN && pCol->y.pTab==0 );
+#ifdef MAGMA_ENABLE_FIXES
     if( ExprIsVtab(pCol) ){
+#else
+    if( pCol->op==TK_COLUMN && IsVirtual(pCol->y.pTab) ) {
+#endif
       sqlite3_vtab *pVtab;
       sqlite3_module *pMod;
       void (*xNotUsed)(sqlite3_context*,int,sqlite3_value**);
@@ -425,14 +436,29 @@ static int isAuxiliaryVtabOperator(
     Expr *pLeft = pExpr->pLeft;
     Expr *pRight = pExpr->pRight;
     testcase( pLeft->op==TK_COLUMN && pLeft->y.pTab==0 );
+#ifdef MAGMA_ENABLE_FIXES
     if( ExprIsVtab(pLeft) ){
+#else
+    if( pLeft->op==TK_COLUMN && IsVirtual(pLeft->y.pTab) ) {
+#endif
       res++;
     }
+#ifdef MAGMA_ENABLE_CANARIES
+    MAGMA_LOG("JCH231", pLeft->y.pTab==0);
+#endif
     testcase( pRight && pRight->op==TK_COLUMN && pRight->y.pTab==0 );
+    
+#ifdef MAGMA_ENABLE_FIXES
     if( pRight && ExprIsVtab(pRight) ){
+#else
+    if( pRight && pRight->op==TK_COLUMN && IsVirtual(pRight->y.pTab) ){
+#endif
       res++;
       SWAP(Expr*, pLeft, pRight);
     }
+#ifdef MAGMA_ENABLE_CANARIES
+    MAGMA_LOG("JCH231", pRight->y.pTab==0);
+#endif
     *ppLeft = pLeft;
     *ppRight = pRight;
     if( pExpr->op==TK_NE ) *peOp2 = SQLITE_INDEX_CONSTRAINT_NE;
@@ -440,6 +466,9 @@ static int isAuxiliaryVtabOperator(
     if( pExpr->op==TK_NOTNULL ) *peOp2 = SQLITE_INDEX_CONSTRAINT_ISNOTNULL;
     return res;
   }
+#ifdef MAGMA_ENABLE_CANARIES
+    MAGMA_LOG("JCH231", pCol->y.pTab==0);
+#endif
   return 0;
 }
 #endif /* SQLITE_OMIT_VIRTUALTABLE */
