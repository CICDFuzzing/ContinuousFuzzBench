diff --git a/poppler/XRef.cc b/poppler/XRef.cc
index 8f9dd7fe..10255f9d 100644
--- a/poppler/XRef.cc
+++ b/poppler/XRef.cc
@@ -1553,6 +1553,7 @@ void XRef::readXRefUntil(int untilEntryNum, std::vector<int> *xrefStreamObjsNum)
 
 namespace {
 
+#ifdef MAGMA_ENABLE_FIXES
 struct DummyXRefEntry : XRefEntry {
   DummyXRefEntry() {
     offset = 0;
@@ -1561,7 +1562,7 @@ struct DummyXRefEntry : XRefEntry {
     flags = 0;
   }
 };
-
+#endif
 DummyXRefEntry dummyXRefEntry;
 
 }
@@ -1576,10 +1577,15 @@ XRefEntry *XRef::getEntry(int i, bool complainIfMissing)
   if (i >= size || entries[i].type == xrefEntryNone) {
 
     if ((!xRefStream) && mainXRefEntriesOffset) {
-      if (unlikely(i >= capacity)) {
+#ifdef MAGMA_ENABLE_FIXES
+        if (unlikely(i >= capacity)) {
 	error(errInternal, -1, "Request for out-of-bounds XRef entry [{0:d}]", i);
 	return &dummyXRefEntry;
       }
+#endif
+#ifdef MAGMA_ENABLE_CANARIES
+        MAGMA_LOG(204, i >= capacity);
+#endif
 
       if (!parseEntry(mainXRefEntriesOffset + 20*i, &entries[i])) {
 	error(errSyntaxError, -1, "Failed to parse XRef entry [{0:d}].", i);
@@ -1592,7 +1598,18 @@ XRefEntry *XRef::getEntry(int i, bool complainIfMissing)
       // We might have reconstructed the xref
       // Check again i is in bounds
       if (unlikely(i >= size)) {
+#ifdef MAGMA_ENABLE_FIXES
 	return &dummyXRefEntry;
+#else
+          static XRefEntry dummy;
+          dummy.offset = 0;
+          dummy.gen = -1;
+          dummy.type = xrefEntryNone;
+          dummy.flags = 0;
+          return &dummy;
+
+#endif
+          
       }
 
       if (entries[i].type == xrefEntryNone) {
