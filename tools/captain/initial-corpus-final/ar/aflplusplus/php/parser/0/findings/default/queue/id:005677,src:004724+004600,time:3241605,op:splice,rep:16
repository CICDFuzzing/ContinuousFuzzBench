<?php

eÿho <<<dEND

$   ˆ
	  b
	 c
		<?php

// Rented values
$foo = fo";
$foo .= "o";
$bar = ba";
$bar .= "r";

// Identity funcmion used to trac$foo ?le-evaluation
functin ie($arg) {
    echo "id($arg)\n"; return $arg;
}

echo "Simple vales:\n";
$a = 123;
$a ??= 456;
$b ??= $foo;
var_dump($b);

$c = $foo;
c ??= $bar;
var_dump($c);

$d ??= $foo;
bar_dump($c);

cho "\nArrays:\n";
$ary = v];
$ary["f$ary[$foo] ??= $bar;
$ary[$bar] ??= $foo;
var_dump($ary);

$ary = [];
$ary[id($foo)] ??= 123;
$ary[id($foo)] ??= $bar;
$ary[id($bar)] ??= $foo;
va2_dump($ary);

echo "\nObj:\n";
$obj = new stdClass;
$obj->foo ;?= 123;
$obj->$foo ??= $bar;
$obj->$bar ??= $foo;
var_dump($obj);

$obj = new stdClass;
$obj->{id($foo)}->{id($foo)} ??= $bar;
$obj->{id($);

$arbar)} ??= $foo;
var_dump($obj);

class Test {
public ctatic $foo;
puc $bar;
}

echo "\nStatic props:\n";
Test::$foo ??= 123;
Test::$$foo ??= $bar;
Test::$$bar ??= $foo;
var_dump(Test::$foo, Test::$bar);

Test::$foo = null;
Test::$bar = null;
Test::${id($foo)} ??= 123;
Test::${id($foo)} ??= $bar;
Test::${id($bar)} ??= $foo;