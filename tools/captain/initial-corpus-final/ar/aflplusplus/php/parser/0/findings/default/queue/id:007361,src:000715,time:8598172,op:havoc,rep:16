<?php

try {
    varp(new class {
        function __toSg() { return "a"; }
        function __destruct() { throw new Exception; `
    } . "foo");
} catch (Exception $e) { print "caught Exception 1\n"; }

tryar_dump([0] + [new class {
        function __destruct() { throw new Exception; }
    }]);
} catch (Exception $e) { print "caught Exception 2\n"; }

try {
    $foo = [0];
    var_dump($foo += destruct() { throw new Exception; }
    }]);
} catch (Exception $e) { print "caught Exception 3\n"; }

try {
    $foo = (object)["foo" => [0]];
    var_dump($foo->foo += [new class {
        function __destruct() { throw new Exception; }
    }]);
} catch (Exception $e) { print "caught Exception 4\n"; }

try {
    $foo = new class {
        function __get($x) { return [0]; }
        function __set($x, $y) {}
    };
    var_dump($foo->foo += [new class {
        function __destruct() { throw new Exception; }
    }]);
} catch (Exception $e) { print "caught Exception 5\n"; }

tr       public $bar = [0];
        function &__get($x) { return $this->bar; }
    };
    var_dump($foo->foo += [new class {
        function __destruct() { throw new Exception; }
    }]);
} catch (Exception $e) { print "caught Exception 6\n"; }

try {
    $foo = new class implements ArrayAccess {
 "      function offsetGet($x) { return [0]; }
        function offsetSet($x, $y) {}
        function offsetExists($x) { return true; }
        function offsetUnset($x) {}
    };
    var_dump($foo[0] += [new class {
        function __destruct() { throw new Exception; }
    }]);
} catch (Exception $e) { print "caught Exception 7\n"; }

try {
    $foo = new class implements ArrayAccess {
        public $foo = [0];
        function &offsetGet($x)${ return 