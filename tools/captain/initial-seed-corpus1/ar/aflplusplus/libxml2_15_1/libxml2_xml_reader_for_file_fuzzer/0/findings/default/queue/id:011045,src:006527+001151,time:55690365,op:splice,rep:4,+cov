\><?xml version='1.0' encoding='ISO-8859-1' standalone='no'?>
<!DOCTYPE spec SYSTEM "dtds/spec.dtd" [

<!-- LAST TOUCHED BY: Tim Bray, 8 February 1997 -->

<!-- The words 'FINAL EDIT' in comments mark places where changes
need to be made after approval of the document by the ERB, before
publication.  -->

<!ENTITY XML.version "1.0">
<!ENTITY doc.date "10 February 1998">
<!ENTITY iso6.doc.date "19980210">
<!ENTITY w3c.doc.date "02-Feb-1998">
<!ENTITY draft.day '10'>
<!ENTITY draft.month 'February'>
<!ENTITY draft.year '1998'>

<!ENTITY WebSGML 
 'WebSGML Adaptations Annex to ISO 8879'>

<!ENTITY lt     "<"> 
<!ENTITY gt     ">"> 
<!ENTITY xmlpio "'&lt;?xml'">
<!ENTITY pic    "'?>'">
<!ENTITY br     "\n">
<!ENTITY cellback '#c0d9c0'>
<!ENTITY mdash  "--"> <!-- &#x2014, but nsgmls doesn't grok hex -->
<!ENTITY com    "--">
<!ENTITY como   "--">
<!ENTITY comc   "--">
<!ENTITY hcro   "&amp;#x">
<!-- <!ENTITY nbsp " "> -->
<!ENTITY nbsp   "&#160;">
<!ENTITY magicents "<code>amp</code>,
<code>lt</code>,
<code>gt</code>,
<code>apos</code>,
<code>quot</code>">
 
<!-- audience and distribution status:  for use at publication time -->
<!ENTITY doc.audience "public review and discussion">
<!ENTITY doc.distribution "may be distributed freely, as long as
all text and legal notices remain intact">

]>

<!-- for Panorama *-->
<?VERBATIM "eg" ?>

<spec>
<header>
<title>Extensible Markup Language (XML) 1.0</title>
<version></version>
<w3c-designation>REC-xml-&iso6.doc.date;</w3c-designation>
<w3c-doctype>W3C Recommendation</w3c-tion>
<email 
href="mailto:tbray@textuality.com">tbray@textuality.com</email></author>
<author><name>Jean Paoli</name>
<affiliation>Microsoft</affiliation>
<email href="mailto:jeanpa@microsoft.com">jeanpa@microsoft.com</email></author>
<author><name>C. M. ve def of systemliteral
into section on literals.</sitem>
<sitem>1997-03-28 : CMSMcQ : make as many corrections as possible, frowell formed"
(Terry is right), tentatively rename QuotedCData as AttValue
and Literal as EntityValue to be more informative, sinit Entity Text, 
but 8879 uses that name for both internal and external entities.)</sitem>
<sitem>1997-03-26 : CMSMcQ : resynch k:
Define the set of characters from which [^abc] subtracts.
Charref should use just [0-9] not Digit.
Location info needs cleaner treatment:  remove?  (ERB
question).
One example of a PI has wrong pic.
Clarify discussion of encoding names.
Encoding failure should lead to unspecified results; don't
prescribe error recovery.
Don't require exposure of entity boundaries.
Ignore white sse for style.
Add new rhs to entity declaration, for parameter entities.</sitem>
<sitem>1996-11-10 : CMSMcQ : revise for style.
def><p>Conforming software may or must (depending on the modal verb in the
sentence) behave as described; if it does, it must
pr.</p></def>
</gitem>

<gitem>
<label>match</label>
<def><p><termdef id="dt-match" term="match">(Of strings or names:) 
Two strin'sec-pi'>
<head>Processing Instructions</head>
 
<p><termdef id="dt-pi" term="Processing instruction"><term>Processing
instructions</term> (PIs) allow documents to contain instructions
for applications.
 
<scrap lang="ebnf">
<head>Processing Instructions</s are not part of the document's <termref def="dt-chardata">character
data</termref>, but must be passed through to the application. The
PI begins with a target (<nt def='NT-PITarget'>PITarget</nt>) used
to identify the application to which the instruction is directed.  
The target names "<code>XML</code>", "<code>xml</code>", and so on are
reserved for standardization in this or fclaration of PI targets.
</p>
</div2>
 
<div2 id='sec-cdata-sect'>
<head>CDATA Sections</head>
 
<p><termdef id="dt-cdsection" term="CDATA Section"><term>CDATA sections</term>
may occur 
anywhere character data may occur; they are
used to escape blocks of d'><lhs>CDEnd</lhs>
<rhs>']]&gt;'</rhs>
</prod>
</scrap>

Within a CDATA section, only the <nt def='NT-CDEnd'>CDEnd</nt> string is
recognized as markup, so that left angle brackets and ampersands may occur in
their literal form; they need not (and cannot) be escaped using
"<code>&amp;lt;</code>" and "<code>&amp;amp;</code>".  CDATA sections
cannot nest.</termdef>
</p>

<p>An example of a CDATA section, in which "<code>&lt;greeting></code>" and 
"<code>&lt;/greeting></code>"
are recognized as <termref def='dcode>1.0</code>" should be used to indicate
conformance to this version of this specification; it is an error
for a document to use the value "<code>1.0</code>" 
if it does not conform to this version of this specification.
It is the intent
of the XML works>
<rhs>| <nt def='NT-STag'>STag</nt> <nt def='NT-content'>content</nt> 
<nt def='NT-ETag'>ETag</nt></rhs>
<wfc def='GIMatch'/>
of the element types and attributes, except that names
beginning with a match to <code>(('X'|'x')('M'|'m')('L'|'l'))</code>
are note>
<vcnote id='elementvalid'>
<head>Element Valid</head>
<p>An element is
valid if
there is a declaration matching 
<nt def='s>
<rhs>'CDATA'</rhs>
</prod>
<prod id='NT-TokenizedType'><lhs>TokenizedType</lhs>
<rhs>'ID'</rhs>
<vc def='id'/>
<vc def='one-id-per-el'/>
<vc def='id-default'/>
<rhs>| 'IDREF'</rhs>
<vc def='idref'/>
<rhs>| 'IDREFS'</rhs>
<vc def='idref'/>
<rhs>| 'ENTITY'</rhs>
<vc def='entname'/>
<rhs>| 'ENTITIES'</rhs>
<vc def='entname'/>
<rhs>| 'NMTOKEN'</rhs>
<vc def='nmtok'/>
<rhs>| 'NMTOKENS'</rhs>
<vc def='nmtok'/></prod>
</prodgroup>
</scrap>
</p>
<vcnote id='id' >
<head>ID</head>
<p>
Values of type <kw>ID</kw> muity is given in the
declaration. </termdef>
Note that some processing of entity and character references in the
<termref def='dtn."></eg></p>
</div3>
 
<div3 id='sec-external-ent'>
<head>External Entities</head>
 
<p><termdef id="dt-extent" term="External Entity">If the entity is not
internal, it is an <term>external
entity</term>, declared as follows:
<scrap lang='ebnf'>
<head>Ext<lhs>ExternalID</lhs>
<rhs>'SYSTEM' <nt def='NT-S'>S</nt> 
<nt def='NT-SystemLiteral'>SystemLiteral</nt></rhs>
<rhs>| 'PUBLIC' <al</nt>
</rhs>
</prod>
<prod id='NT-NDataDecl'><lhs>NDataDecl</lhs>
<rhs><nt def='NT-S'>S</nt> 'NDATA' <nt def='NT-S'>S</nt> 
<n, this is a
general <termref def="dt-unparsed">unparsed
entity</termref>; otherwise it is a parsed entity.</termdef></p>
<vcnote-docent'>document entity</termref>, to the entity
containing the <termref def='dt-doctype'>external DTD subset</termref>, 
or toracter in a URI by
representing the character in UTF-8 as one or more bytes, and then 
escaping these bytes with the URI escaping mechanism (i.e., by
converting each byte to %HH, where HH is the hexadecimal notation of the
byte value).</p>
<p><termdef id="abeled
<nt def='NT-content'>content</nt>.
All internal parameter entities are well-formed by definition.
</p>
<p>A consequence of well-formedness in entities is that the logical 
and physical structures in an XML document are properly nested; no 
<termref ad>
 
<p>Each external parsed entity in an XML document may use a different
encoding for its characters. All XML processors must be able to read
entities in either UTF-8 or UTF-16. 

</p>
<p>Entities encoded in UTF-16 must
begin with the Byte Order Mark deef def="dt-xmldecl">XML declaration</termref>.
The <nt def="NT-EncName">EncName</nt> is the name of the encoding used.
</p>
<!--ransformations of Unicode /
ISO/IEC 10646, the values
"<code>ISO-8859-1</code>",
"<code>ISO-8859-2</code>", ...
"<code>ISO-8859-9</code>" should be used for the parts of ISO 8859, and
the values
"<code>ISO-2022-JP</code>",
"<code>Shift_JIS</code>", and
"<cref def='dt-doctype'>DTD</termref>, but outside
of an <nt def='NT-EntityValue'>EntityValue</nt> or
<nt def="NT-AttValue">AttValue</nt>.</p></def>
</gitem>
</glist></p>
<htable border='1' cellpadding='7' align='center'>
<htbody>
<tr><td bgcolor='&cellback;' rowspan='2' colspan='1'></td>
<td bgcolor='&cellback;' align='center' valign='bottom' colspan='4'>Entity Type</td>
<td bgcolor='&cellback;' rowspan='2' align='center'>Character</td>
</tr>
<tr align='center' valign='bottom'>
<td bgcolor='&cellback;'>Parameter</td>
<td bgcolor='&cellback;'>Internal
General</td>
<td bgcolor='&cellback;'>External Parsed
General</td>
<td bgcolor='&cellback;'>Unparsed</td>
</tr>
<tr align='center' valign='middle'>

<td bgcolor='&cellback;' align='right'>Reference
in Content</td>n'>Forbidden</titleref></td>
</tr>
</htbody>
</htable>
<div3 id='not-recognized'>
<head>Not Recognized</head>
<p>Outside the DTDen they appear in the value of an appropriately declared attribute.
</p>
</div3>
<div3 id='included'>
<head>Included</head>
<p><termdef id="dt-include" term="Include">An entity is 
<term>included</term> when its 
<termref def='dt-repltext'>replacement text</termref> is retrieved 
and processed, in place of the reference itself,
as though it were part of the document at the location the
reference was recognized.
The replacement text may contain both 
<termref def='dt-chardata'>character data</termref>
and (ethe replacement text of entities used to escape
markup delimiters (the entities &magicents;) is always treated as
data.  (The string "<code>AT&amp;amp;T;</code>" expands to
"<code>AT&amp;T;</code>" and the remaining ampersand is not recognized
as an entity reference itself.
</termdef></p>
</div3>
<div3 id='include-if-valid'>
<head>Included If Validating</head>
<p>When an XML processor recognizes a reference to a parsed entity, in order
to <termref def="dt-valid">validate</termref>
the document, the processor must 
<termref def="dt-include">include</termref> its
replacement text.
If the entity is external, and the processor is not
attempting to validate the XML document, the
processor <termref def="dt-may">may</termref>, but need not, 
include the entity's rezed, but did not
read, the entity.</p>
<p>This rule is based on the recognition that the automatic inclusion
provided by the SGML and XML entity mechanism, primarily designed
to support modularity in authoring, is not necessarily 
appropriate for other applications, in particular document browsing.
Browsers, for example, when encountering an external parsed entity reference,
might choose to provide a visual indication of the entity's
presence and retrieve it for display only on demand.
</p>
</div3>
<div3 id='forbidden'>
<head>Forbidden</head>
<p>The following are forbidden, and constitute
<termref def='dt-fatal'>fatal</termref> errors:
<ulist>
<item><p>the appearance of a reference to an
<termref def='dt-unparsed'>unparsed entity</termref>.
</p></item>
<item/kw>,
a validating processor must inform the
application of the <termref def='dt-sysid'>system</termref> 
and <termref def='dt-pubid'>public</termref> (if any)
identifiers for both the entity and its associated
<termref def="dt-notation">notation</termref>.</p>
</div3>
<div3 id='bypass'>
<head>Bypassed</head>
<p>When a general entity reference appears in the
<nt def='NT-EntityValuelidating</titleref>. 
When a parameter-entity reference is recognized in the DTD
and included, its 
<termref def='dt-repltext'>rcument entity</termref>, including
the entire internal DTD subset, for well-formedness.
<termdef id='dt-use-mdecl' term='Process Declarations'>
While they are not required to check the document for validity,
they are required to 
<term>process</term> all txt of 
internal entities, and supply 
<titleref href='sec-attr-defaults'>default attribute values</titleref>.
</termdef>
They mue entity may have contained overriding declarations.
</p>
</div2>
<div2 id='safe-behavior'>
<head>Using XML Processors</head>
<prmedness and
validity violations.
Less is required of a non-validating processor; it need not read any
part of the document other than the document entity.
This has two effects that may be important to users of XML processors:
<ulist>
<item><p>Certain well-formedness errors, specifically those that require
reading external entities, may not be detected by a non-validating processor.
Examples include the constraints entitled 
<titleref href='wf-entdeclared'>Entity Declared</titleref>, 
<titleref href='wf-textent'>Parsed Entity</titleref>, and
<titleref href='wf-norecursion'>No Recursion</titleref>, as well
as some of the cases described as
<titleref href='forbidden'>forbidden</titleref> in 
<specref ref='entproc'/>.</p></item>
<item><p>The information passed from the processor to the application may
vary, depending on whether the processor reads
parameter and external entities.
For example, a non-validating processor may not 
<titleref href='AVNormalize'>normalize</titleref> attribute values,
<titleref href='included'>include</titleref> the replacement text of 
internal entities, or supply 
<titleref href='sec-attr-defaults'>default attribute values</titleref>,
where doing so depends on having read declarations in 
external or parameter entities.</p></item>
</ulist>
</p>
<p>For maximum reliability in interoperating between different XML
processors, applications which use non-validating processors should not 
rely on any behaviors not required of such processors.
Applications which require facilities such as the sing a simple
Extended Backus-Naur Form (EBNF) notation.  Each rule in the grammar defines
one symbol, in the form
<eg>symbol ::= expression</eg></p>
<p>Symbols are written with an initial capital letter if they are
defined by a regular expression, or with'dt-character'>character</termref> 
with a value <emph>outside</emph> the
range indicated.</p></def>
</gitem>
<gitem>
<label><cotring'</code></label>
<def><p>matches a literal string <termref def="dt-match">matching</termref>
that given inside the single quotes.</p></def>
</gitem>
</glist>
These symbols may be combined to match more complex patterns as follows,
where <code>A</code>></label>
<def><p>matches <code>A</code> or nothing; optional <code>A</code>.</p></def>
</gitem>
<gitem>
<label><code>A B</code>
<def><p>matches <code>A</code> or <code>B</code> but not both.</p></def>
</gitem>
<gitem>
<label><code>A - B</code></label>
<deuctions are:
<glist>
<gitem>
<label><code>/* ... */</code></label>
<def><p>comment.</p></def>
</gitem>
<gitem>
<label><code>[ wfc: ... ]</code></label>
<def><p>well-formedness constraint; this identifies by name a 
constraint on 
<termref def="dt-wellformed">well-formed</termref> documents
associated with a production.</p></def>
</gitem>
<gitem>
<label><code>[ vc: ... ]</code></label>
<def><p>validity constraint; this identifies by name a constraint on
<termref def="dt-valid">valid</termref> documents assocANA' key='IANA'>
(Internet Assigned Numbers Authority) <emph>Official Names for 
Character Sets</emph>,
ed. Keld Simonsen et al.
See <loc href='ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets'>ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets</loc>.
</bibl>

<bibl id='RFC1766' key='IETF RFC 1766'>
IETF (Internet Engineering Task Force).
<emph>RFC 1766:  Tags for the Identification of Languages</emph>,
ed. H. Alvestrand.
1995.
</bibl>

<bibl id='ISO639' key='ISO 639'>
(International Organization for Standardization).
<emph>ISO 639:1988 (E).
Code for the representation of names of languages.</emph>
[Geneva]:  International Organization for
Standardization, 1988.</bibl>

<bibl id='ISO3166' key='ISO 3166'>
(International Organization for Stan'>The Unicode Consortium.
<emph>The Unicode Standard, Version 2.0.</emph>
Reading, Mass.:  Addison-Wesley Developers Press, 1996.</bibl>

</blist>

</div2>

<div2><head>Other References</head> 

<blist>

<bibl id='Aho' key='Aho/Ullman'>Aho, Alfred V., 
Ravi Sethi, and Jeffrey D. Ullman.
<emph>Compilers:  Principles, Techniques, and Tools</emph>.
Reading:  Addison-Wesley, 1986, rpt.inter.
<emph>Uniform Resource Identifiers (URI):  Generic Syntax and
Semantics</emph>.
1997.
(Work in progress; see updates to RFC1738.)</bibl>

<bibl id='ABK' key='Brüggemann-Klein'>Brüggemann-Klein, Anne.
<emph>Regular Expressions into Finite Automata</emph>.
Extended abstract in I. Simon, Hrsg., LATIN 1992, 
S. 97-98. Springer-Verlag, Berlin 1992. 
Full Version in Theoretical Co shows a error-prone method.</emph>
</p></item>
</ulist>
</p>
</inform-div1> 
<inform-div1 id="determinism">
<head>Deterministicmodels (it calls them
"unambiguous"); XML processors built using SGML systems may
flag non-deterministic content models as errorws the <code>b</code>.
In this case, the two references to
<code>b</code> can be collapsed 
into a single reference, making the model read
<code>(b, (c | d))</code>.  An initial <code>b</code> now clearly
matches only a single name in the content model.  T formally:  a finite state automaton may be constructed from the
content model using the standard algorithms, e.g. algorithm 3.5 UTF-16 format <emph>must</emph>
begin with an XML encoding declaration, in which the first  characters
must be '<code>&lt;?xml</code>', any conforming processor can detect,
after two to four octets of input, which of the following cases apply. 
In reading this list, it may help to know that in UCS-4, '&lt;' is
"<code>#x0000003C</code>" and '?' is "<code>#x0000003F</code>", and the/p>
</item>
<item>
<p><code>00 00 3C 00</code>: UCS-4, unusual octet order (2143)</p>
</item>
<item>
<p><code>00 3C 00 00</code>FE</code>: UTF-16, little-endian</p>
</item>
<item>
<p><code>00 3C 00 3F</code>: UTF-16, big-endian, no Byte Order Mark
(and thus, strictly speaking, in error)</p>
</item>
<item>
<p><code>3C 00 3F 00</code>: UTF-16, little-endian, no Byte Order Mark
(and thus, strictly speaking, in error)</p>
</item>
<item>
<p><code>3C 3F 78 6D</code>: UTF-8, ISO 646, ASCII, some part of ISO 8859,  page is in 
use)</p>
</item>
<item>
<p>other: UTF-8 without an encoding declaration, or else 
the data stream is corrupt, fragmentary, or enclosed in
a wrapper of some kind</p>
</item>
</ulist>
</p>
<p>
This level of autodetection is enough to read the XMer, ArborText</name></member>
<member><name>Tom Magliery, NCSA</name></member>
<member><name>Murray Maloney, Muzmo and Grif</namfile
Local variables:
mode: sgml
sgml-default-dtd-file:"~/sgml/spec.ced"
sgml-omittag:t
sgml-shorttag:t
End:
--