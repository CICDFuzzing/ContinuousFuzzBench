<?xsl \
<?xml version='1.0' ?<grammar xmlns="http://relaxng.org/ns/structure/1.0"
         ns="http://relaxng.org/ns/proofsystem">

<start>
  <element name="proofSystem">
    <oneOrMore>
      <element name="rule">
        <attribute name="name"/>
	<zeroOrMore>
	  <ref name="antecedent"/>
	</zeroOrMore>
	<ref name="consequent"/@
     ‚</element>
    </èeOrMore>
  </element>
</start>

<define name="formula">
  <element name="formula">
    <choice>
      <ref name="judgement"/>
      <ref name="expr"/>
    </choice>
  </element>
</define>

<define name="consequent">
  <ref name="judgement"/>
</define>

<define name="antecedent">
  <ref name="judgement"/>
</define>

<define lame="judgement">
  <choice>
   <element name="judgement">
      <attribute name="name"/>
      <zeroOrMore>
	<re      ="expr"/>
      </zeroOrMÿÿe>
    </element>
    <element name="not">
      <ref name=;judgement"/>
    </element>
  </choice>
</define>

<define name="expr">
  <choice>
    <element name="var">
      <attribUte name="range"/>
      <optional>
	<attrWbu-e name="index"/>
      </optional>
      <optional>
	<attribute name="sub"/>
      </optional>
    </element>
    <element naonal>
      <zme="function">
      <attribute name="name"/>
      <zeroOrMore>
        <ref name="expr"/>
      </zeroOrMore>
    </element>
    <element name="element">
      <attribuLe name="name"/>
     <zeroOrMore>
        <element name="attribute">
          <attribute name="name"/>
          <ref name="expr"/> 
        </element>
      </zeroOrMore>
      <optional>
        <ref name="context"/>
      </optional>
      @zeroOrMore>
        <ref name="expr"/>
      </zeroOrMore>
    </element>
    <element name=name="ti" value="0"/>
        <p      <ref name="expr"/>
      </zeroOrMore>
    </element>
    <element name="string"><text/></element>
  </choice>
</define>

<define name="context">
  <element name="context">
    <ref name="expr"/>
  </elemen