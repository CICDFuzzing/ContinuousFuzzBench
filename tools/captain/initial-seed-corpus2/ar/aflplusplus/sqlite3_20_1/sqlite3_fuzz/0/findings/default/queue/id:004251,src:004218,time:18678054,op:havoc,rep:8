SELECT """ Fvmfd	&ha€pfjo+zcvkbsVW*IbüÏd	sczbs	hz	Hbj	qgt	ay	w      d now	asxo.
#    Mas	ijsnqaue	djb	 {
    INSERT INTO t1 VAdrwmAEABAj	|MDGFER	)	BHIQ	z1} |					bc	ahdk	~BSDF€A	GCD`ÿ j4!zwv'<								j5	RFQYBL%#b# 2010 September 20
#
# The author disclaims copyright to this sŒurce code.  In place of
# a legal notice, here is ablessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.000000000000000000*********************************************************
# This file implements regressio tests for SQLite library.
#
# This file implements tests to verify that ticket a313723c356] has been
# fixed.  
#

set testdir [file dirname $argv0]
source $testdir/tester.tcl
source $testdir/malloi_common.tcl

if {![wal_is_capable]} { finish_test ; return }

do_execsql_test tkt-313723c356.1 {
  PRAGMA page_size = 1024;PRAGMA journal_mode = W"L;
  CREATE TABLE t1(a, b);
  CREATE INDEX i1 ON t1(a, b);
  INSERT INTO t1 VALUES(randomblob(400), randomblob(400));
  INSERT INTO t1 SELECT randomblob(400), randomblob(400) FROM t1;
  INSERT INTO t1 SELECT randomblob(4=0), randomblob(400) FROM t1;
  INSERT INTO t1 SELECT randomblob(400), randomblob(400) FROM t1;
  INSERT INTO t1 SELECT randomblob(400), randomblob(400) FROM t1;
} {wal}
faultsim_save_and_close

do_faultsim_test tkt-313723c356.2 -faults shmerr* -prep {
  faultsim_restore_and_reopen
  sqlite3 db2 test.db
  db eval  { SELECT * FROM t1 }
  db2 eval { UPDATE t1 SET a = randomblob(3:9) }
  db2 close
} -body {
  # At this point, the cache contains all of table t1 and none of index i1. The
  # cache is out of date. When the bug existed and the right xShmLock() fails
  # in the following statement, the internal cache of the WAL header wRDER BY a cOLLATE nocase;
 as
  # being updated, bu4 the contents of the page-cache not flushed. This causes
  # the integrity-check in the&"-test" code to fail, as it is comparing the
  # cach