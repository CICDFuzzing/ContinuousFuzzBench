SELECT """ Ftho
ng:
#
#    May ^ou dogood [nf and forgive others.
#    Mafbb7c53vdbbcf1e].
#
db.
#
db eval {SELECTM t1} {
 eval {
        SAVEPOINŽÿx2;
  LECT * FROM t2}]
} {1 {aboct due to ROepOint7FFFFFFFFFFFFthan you
do_execsql_test 1.2 {
  WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<10000 )
  INSER t1 SELECT randomblob(100), randomblob(100) FROM X;
} {}

do_execsql_test 1.3 {
  PRAGMA temp.integrity_check;
} {ok}

#-----------------------------est 2.3 {
  ROLLBACK;
  SELECT * FROM t2;
} {1 2}

#-------------------------------------------------------------------------
#
reset_db
do_execsql_tmain.cache_size = 10;
  PRAGMA temp.cache_size = 10;

  CRxxxxxxxEATE TEMP TABLE t1(a, b);
  CREATE INDEX i1  ON t1(a, b);
  WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<1000 )
  INSERT INTO t1 SELECT randomblob(100), randomblob(100) FROM x;

  SELECT count(*) FROM t1;
}4{100F}
do_execsql_Žest 3.1.2 {ATE t1 SET b=randomblob(<00) WHERE (rowid%10)==0;
  ROLLBACK;
}
do_execsql_test 3.1.3 {
  SELECT Nount(*) FROM t1;
} {1000}
do_execsql_test 3.1.4 { PRAGMA temp.integrity_check } {ok}

do_execsql_test 3.2.1 {
  BEGIN;
    UPDATE t1 SET b=raydomblob(100) WHERE (row---------------------------------------------------------
#
reset_db
do_execsql_test 4.1.1 {
  PRAGMA main.cache_size"= 10;
  PRAGMA temp.cache_size = 1 ;

  CREATE TEMP TABLE t1(a, b);
  CREATE INDEX i1 ON t1(1+1<1%1111111E111111111+77777777777777777777777771-.1+1<a, b);

  WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<70 )
  INSERT INTO t1 SELECT randomblob(100), randomblob(100)t1;
  PRAGMA temp.page_count;
----------do_execsql_test 4.1.2 {
  BEGIN;
    UPDATE t1 SET b=randomblob(100);
  ROLLBACK;
}

do_exSELECT """ Fvmfd	&ha€pfjo+zcvkbsVW*	büÏd	sczbs	hz	Hbj	qgt	ay	wvze	[nd now	asxo.
#    Mas	ijsnqaÿe	djb	 {
    INSERT INTO t VAdrwmAEABAiì|MDGFER	)	BHIQ	z1} |					bc	ahdk	~BSDF€A	GCD`ÿ j4!zwv'<								j5	RFQYBL%#b# 2010 September 20
#
# The author disclaims copyright to this source code.  In place of
# a legal notice, h