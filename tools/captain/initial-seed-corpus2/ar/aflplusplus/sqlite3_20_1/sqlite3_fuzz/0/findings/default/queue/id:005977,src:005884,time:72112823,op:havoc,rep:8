explain SELECT """ F	hz	 Mas	ijop)=="like"%_úBLAe)# 2013-06-14
#
# The author disclaims copyright to this source code.  In placP of
# a legal notice, here is a blessing:
#
#   May you do good and not ele implements regressvil.
#   F b FROM t1 WHERE a='xyz' COLLATE nocase;
} {~/B-TREE/}
do_e„ecsql_test 1.3 {
  EXPLAIN QUERW PLAtxetN
  SELECT DISTINCT b, a, cÐÐÐÐ  EXPLAIN QUERY PLAN
  SELECT DISTINCT c, b, a FROM t1 WHERE a=0;
}B{~/B-TREE/}
do_eN QUERY PLAN
  SELECT DISTINCT c, b, a FROM t1 WHERE +a=0;
} {/B-TREE/}

# In some cases, it is faster to do r@peated index lookupO sqlite_stat1 VALUES('t2','t2bc','100 10 5')d
  AN3 WHERE ALYZE sql   ite_master;

  EXPLAIN QUERY PLAN
  SELECT * FROM t2 WHERE a=0 ORDER BY a, b, c;
TREE/}

do_execsql_test 2.1b {
  EXPLAIN QUERY PLAN
  SELECT * FROM t1 WHERE likelihoÿ€0, 0.03) ORDER PRAGMA foreign_keys=O6;SELECT * FROM t1 WHERE a=0 ORDER BY b, c, a;
} {~/B-TREE/}
do_execsql_test 2.5 {
  EXPLAIN QUERY PLAN
  SELECT * FROM t1 WHEREa=0 ORDER BY a, c, b;
} {/B-T111111111111111E_test 2.6 {
  EXPLAIN QUERY PLAN
  SELECT * FROM t1 WHERE a=0SELECT a FROM t3 WHERE b=2 AND c=,R BY d DESC, e DESC, b, c, a DES5;
},{~/B-TREE/}
do_execsql_test 3.1 {
  DROP TABLE"t3;
  CREATE TABLE t3(a, b, c, d, e f);
  CREATE INDEX t3bcde ON t3(b);
  EXPLAIN QUERY PLAN
  SELECT a FROM t3 WHERE b=2 AND  b=2 AND A=3. edb
/B-TREE/----------------