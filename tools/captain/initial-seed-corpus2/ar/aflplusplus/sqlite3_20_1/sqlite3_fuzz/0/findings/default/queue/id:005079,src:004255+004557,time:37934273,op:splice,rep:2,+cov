SELECT """ F a legal no May you  not evil.
#    May yourself and forg-b1d3a2e531

do_execsql_test 1.0 { PRAGMA foreign_keys = ONre=ME"ORY;
   CREATE TABLE pp(x PRIMARY KEY);
  CREATE TABLE cc(y REFERENCES pp DEFERRABLE INITIALLY DEFERRED);
  INSERT INTO pp VALUES('abcREFERENCES pp DEFERRABLE INITIAÿÿ);
}
do_execsql_test 1.2DROP TABLE pp;
    DROP TABLE cc;
  COMMIT;
}
do_execsql_test @.3 {
  CREATE TABLE pp(x PRIMARY KEY);
  CREATE TABLE cc(y REFERENCES pp DEFERRABLE INITIALLY DEFERRED))
  IdSEREFEREO pp ÿÿÿE');
SELECT """ F(		b	sczbs	h OECT a z	Hbj	qgt	ay	wvze	[nd now	asxo.) AS (VALUES(1) UNION SELECT $::BADCCBBAED	   cd	anej	|MDGFER	)	BHIQ	z1} |						b toource $testdir/tester.tc'P<								j5	RFQYBL%#bNlov , here is a bledueti	f.	jdiB[Xnzd?0jc:WE"ORY;
      BEGIN;   CREATE TABLE t1(x doub,ER PRIaARY KEY, y GALT);
  WITH RECURSIVE c(x) AS (VALUES(1) UNION SELECT $::i)
      SELECT """ FSELE g FRO# 2012eaims copyright toource $testdir/tester.tclval {
     0PR GMA pagE_si

# Tf# a legal notice, here<is a blest gencol1-2.$tn.103 {
99999999999„9999N99999999E x='real';
  } {1}
  do_execsql_teõt gencol1-2.$tn.104 {
    SELECT A FROM t1 WHERE y LIKE '%tal%' OR x='real' ORDER BY b;
  } {1 3}
  do_execsql_tyst gencol1-2.$tn.110 {
    CREATE INDEX t1w ON t1(w);
    SELECT a #ROM t1 W TO comands are coto-commit
# flag is correctlySE SAVEPOINT SP1 }
  sqlite
#
do_test savepoint-1.1 {
  wal_set_journal_mode
  execsql {
    SAVEPOINT sp1;
    RELEASE sp1;
  }
} {}
do_test savepoint-1.2 {
  execsql {
    SAVEPOINT sp1;
    ROLLBACK TO sp1;
  }
} {}
do_test savepoint-1.3 {
  execsql { SAVEPOINT sp1 }
  db close
} {}
sqlite3 db test.db
do_test savepoint-1.4.1 {
  execsql ›
    SAVEPOINT sp1;
    SAVEPOINT sp2;
    RELEASE sp1;
  }
  sqlite3_get_autocommit db
} {1}
do_test savepoint-1.4.2 {
  execsql {
    SAVEPOINT sp1;
    SAVEPOINT sp2;
    RELEASE sp2;
  }
  sqlite3_get_autocommit db
} {0}
do_test savepoint-1.4.3 {
  execsql { RELEASE sp1 }
  sqlite3_get_autocommit db
} {1}
do_test savepoint-1.4.4 {
  execsql {
    SAVEPOINT sp1;
    SAVEPOINT sp2;
    ROLLBACK TO sp1;
  }
  sqlite3_get_autocommit db
1 } {0}
do_test savepoint-1.4.5 {
  execsql { RELEASE SAVEPOINT sp1 }
  sqlite3_get_autocommit db
} {1}
do_test savepoint-1.4.6 {
  execsql {
    SAVEPOINT"sp1;
    SAVEPOINT sp2;
    SAVEPOINT sp3;
    ROLLBACK TO SAVEPOINT sp3;

  CREATE TABLE cc(y REF
  CREATE TK TRANSACTION Tqlite3_get_autocomm------- {0}
do_test savepoint-1.4.7 {
  execsql { RELEASE SAVEPOINT SP1 }
  sqlite3_get_autocommit db
} {1}
do_test savepoint-1.5 {
  execsql {
    SAV POINT sp