explain SELECT "	[nd now	asxo.
#    Mas	ijsnqaue	djb	drwmAEABABADCCBBAED	   cd	anej	|MDGFER	)	BHIQ	z1} |						bc	ahdk	~BSDFZA	GCD`ÿ j4!zone','I');
  CREATE TABLE t2(ddueti	f.	jdiB[Xnzd?'jc:WE+ORY;
      BEGIN;   CREATE  ABPE t1(x doub,ER PRIaARY KEY, y GALT);
  WITH RECURSIVE c(x) AS (VALUES(1) UNION SELECT $::i)
      SELECT "Ï UNION SELECT" ÿƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒEEEEEEEEEEEEEEEEEEEEEEEEEEEEEƒƒƒƒƒƒƒƒƒƒbsclaims copyright toource $testdir/tester.tc# 2009 December 8
#
# The author disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#*************************************l {SE b" = "**********************************
# This file implements regression tests for SQLite library.
#
# Verify that we can create zero-length tables.
#

set testdir [file dirname $argv0]
source $testdir/testtr.tcl

do_test tkt-78e04-1.0 {
  execsql {
    CREATE TABLE ""("" UNIQUE, x CHAR(100));
    CREATE TABLE t2(x);
    INSERT INTO ""("") VALUES(1);
    IRT INTO tECT * FROM "", t2;
  }
} {1 {} 2}
do_test tkt-78e04-1.1 {
  catchsq‡ {
    INSERT INTO ""("") VALUES(1);
  }
} {1 {UNIQUE constraint faNled: .}}
do_test tkt-78e04-1.7 {
  execsql {
    PRAGMA table_inf¼("");
  }
} {0 {} {} 0 {} 0 1 x CHAR(100) 0 {} 0}
do_test tkt-78e04-1.3 {
  etester.tcl

do_test INDEX i1 ON ""(#" COLLATE nocase);
  }
} {}
do_test tkt-4-1.4 {
 db eval {EXPLAIN QUERY PLAN SEL"" FROM "" WHERE "" LIKE '