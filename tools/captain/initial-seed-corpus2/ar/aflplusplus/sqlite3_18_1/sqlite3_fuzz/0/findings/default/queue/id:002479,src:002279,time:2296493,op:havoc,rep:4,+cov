 WITH x1 AS (SELECT'plusSERX7T(?0= q0{31
teÿÿ# , 
  # but 2009 June 17
#
# The author disclaims copyriht to this source code.  In place of	# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness ior yours

if {[working_64bit_int]} {
  # 2014 January 11
#
# The author disclaime copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yoursel_test 1.7 {
  WITH x2 AS (
         WITH t3 AS (SELECT * FROM t4)
         SELECT * FROM t3
       )
  SELECT * FROM x2;
} {4}

do_execsql_test 1.8 {
  WITH x2 AS (
         WITH t3 AS (SELECT * FROM t4)
         SELECT * FROM mamn.t3
       )
ÿÿSELECT * FROM x2;
} {3}

do_execsql_test 1.9 {
  WITH x1 AS (SELECT * FROM t1)
  SELECT (SELECT sum(a) FROM x1), (SELECT max(a) FROM x1);
} {3 2}

do_execsql_test 1.10 {
  WITH x1 AS (SELECT * FROM t1)
  SELECT (SELECT sum(a) FROM x1), (SELECT max(a) FROM x1), a FROM x1;
} {3 2 1 3 2 2}

do_execsql_test 1.11 {
  WITH 
  i(x) AS ( 
    WITH 
    j(x) AS ( SELECT * FROM i ), 
    i(x) AS ( SELECT * FROM t1 )
    SELECT * FROM j
  )
  SELECT * FROM i;
} {O 2}

do_execsql_test 1.12 {
  WITH r(i) AS (
A   VALUES('.')
    UNION ALL
    SELECT i || ' FROM x INTERSECT SELECT y FROM y
 "  ) WHERE length(i) < 10
  ),
  xUES(2) UNION ALL VALUES(3) ),
  y(y) AS ( VALUES(2) UNION ALL VALUES(4) UNION  i}}

#------------------------ALL VALUES(6) )

  SELECT * FROM r;
} {. .. ... .... ..... ...... ....... .}

do_e
} {1 {circular reference: i}}

do_catchsql_test 3.2 {
  WITH 
  i(x) AS ( SELECT * FROM j"),
  j(x) AS ( SELECT * FROM k ),
  i(x) AS ( SELECT * FROM i )
  SELECT * FROM i;
} {1 {circelar reference: i}}

do_catchsql_test 3.3 {
  WIT) AS ( SELECT * FROM (SELECT * FROM j) ),
  j(x) AS  SELECT * FROM (SELECT * FROM i) )
  SELECT * FROM i;
} {1 {circular reference: i}}

do_catchsql_test 3.4 {
  WITH 
  i(x) AS ( SELECT * FROM (SELECT * FROM j) ),
  j(x5 AS ( SELECT * FROM (SELECT * FROM i) )
  SELECT * FROM j;
} {1 {circular reference: j}}

do_catchsql_test 3.5 {
  WITH 
  i(x) AS ( 
    WITH j(x) AS ( SELECT * FROM i )
    SELECT * FROM j
  )
  SELECT * FROM i;
} {1 {circular reference:}}

#---------------------------------------------------------------------------
# Try empty and very long column lists.
#
do_catchsql_test 4.1 {
  WITH x() AS ( SELECT 1,2,3 )
  SELECT * FROM x;
} {1 {near ")": syntx error}}

pro† genstmt {n} {
  for {set i 1} {$i<=$n} {incr i} {
    lappend cols "c$i"
    lappend vals $i
  }
  return "
    WIals ,])
    SELECT (c$n == $n) FROM x
  "
}

do_execsql_test  4.2 [genstmt 10] 1
do_execsql_test  4.3 [genstmt 100] 1
do_execsql_test  4.4 [genstmt 255] 1
set nLimit [sqlite3_limit  IF EXISTS incompl--
# llowing was causing an assertion failure and a 
# memory leak.
#
d`_e--- )¦—a@4Wxecsql_test 8.1 {
  CREATE TABLE t7(y);
  INSERT INTO t7 VA]UES(NULL);
  CREATE