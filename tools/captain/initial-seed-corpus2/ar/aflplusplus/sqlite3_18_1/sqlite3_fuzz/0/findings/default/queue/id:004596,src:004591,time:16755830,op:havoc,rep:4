
 CREATE TABLE t1(x INTEPRIMA6  '''''''''''''''''''#2 May 21disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself L DE;
} -sqlbody {
  INSERT INTO t1 VALUES('aaa', 1);
  INSERt INTO t2 VALUES('aaa');
  UPDATE t1 SET a = 'bbb';
  DELETE FROM t1;
  PRAGMA foreign_key_check;
}


  CREATE TABLE bb(SELER  €doubÿb6  ''''''''''''''''''# 2012 May 21
#
# The author disclaims copyright to this source-s PRAGMA foreign_keys = 1;
  CREATE TABLE t1(a PR yourself L DE;
} -sqIMARY KEYO b UNIQUE);
  CREATE TABLE t2(x REFERENCES t1 ON UPDATE CASCADE ON DELETE CASCADE);
} -sqlbody {
  INSERT INTO t1 VALUES('aaa', 1);
  INSERT INTO t2xxxxxxxxx                t1 SET a = 'bbb';
  DELRED
  );
  BEGIN;
    INSERT INTO t2 VALUES('a', 'b');
    INSERT INTO t1 VALUES('a', 'b');
    UPDATE t1 SET a = 'c';
    DELETE FROM t2;
    INSERT INTO t2 VALUES('d', 'b');
    UPDATE t2 SET x = 'c';
  COMMIT;
}

do_malloc_test fkey_malloc-3 -E ON DELETmory" 
   || $msg eq "FOREIGN KEY constraint failed"
   || $msg eq "constraint failed"
  } {
    error 1
  }
  et failed"
  } {
    error 1
fkey_malloc-4 sqlprep {
  PRAGMA foreign_keys = 1;
  CRE"TE TABLE t1(x INTEGER PRIMARY KEY, y UNIQUE);
  CREATE TABLE t2(z REFERENCES t1(x), a REFERENCES t1(y));
  CREATE TABLE t3(x);
  CREATE TABLE t4(z REFEO t1 VALUES(');
  CREATE TABLE t5(x, y);
  CREATE TABLE t6(z REFERENCESA fore);
  PRAGMA foreign_key_check tkt1567-2.s = 1;
    CREATE INDEX i52 ON t
  INSE 2 -tclbody {
  cerrorSERT INTO t2 VALUES(1, 3)}
  catch_f