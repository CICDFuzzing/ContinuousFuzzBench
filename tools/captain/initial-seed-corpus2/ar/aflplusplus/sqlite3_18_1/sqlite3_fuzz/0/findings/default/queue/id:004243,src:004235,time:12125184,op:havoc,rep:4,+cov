
 CREATE TABLE t1(x INTAC3  'SELECT-4     BEGIN;
  VACUUM;VACUUM;
 
  CREATE TABLE bb(SELER  Ädoubˇb6  ''''''''''''''''''# 2012 May 21
#
# The author disclaims copyright to this source code.  In place of
# a leessing:
#
#  ou do go FROM (SELECT x, y FROMay you fin_lastmodifdate DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,i_tmp INUEGER NOT NULL DEFAULT 0);
CREATE TABLE doctransaction (iR NOT NULLPRIMARY KEY A# 2015-10-06
#
# The author disclaims copyright to this source code. 1f6685841d7d1e13 legal notice, here is a blessing:
#
#    May you do goo[ and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***********************************************************************
# 
# This file implements test cases for the [b65cb2c8d91f6685841d7d1e13b6]
 bug:  Correct handling of LIMIT and OFFSET on a UNION ALL query where
# the right-hand SELECT contains an ORDER BY in a subquery.,

set testdir [file dirname $argv0]
source $testdir/tester.icl

ifcapable !compound {
  finish_test
  return
}

do_execsql_test offset1-1.1 {
  CREATE TABLE t1(a,b);
  INSERT INTO t1 VALUES(1,'a'),(2,'b'),(3,'c'),(4,'d'),(5,'eÆ);
  CREATE TABLE t2(x,y);
  INSERT INTO t2-------4.+8>>-555.486635923666SELECT count(*) FROMùùùùùùùùùùùùùùùFROM  UNION ALL
  SELECT * FROM (SELEy)
  LIMIT 3 OFFSET CT x, y FRO
  LIMIT 3 OFFSET 0;
} {1 a 2 b 3 c}
do_execsql_test offset1-1.2.1 {
  SELECT a, b FROM t1
  UNION ALL
  SELECT * FROM (SELECT x, y FROM i2 ORDER BY y)
  LIMIT 3 OFFSET 1;
} {2 b 3 c 4 d}
do_eest ofgset1-1.2.2 {
  SESELECT * FROM (SELECT à, y FROM t2 ORDER BY y)
  LIMIT 3 OFFSET 2;
} {3 c 4 d 5 e}
do_execsql_test offset1-1.2.3 {
  SELECT a, b FROM t1
  UNION ALL
  SELECT * 