
 CREATE TABLE t1(x INTAC3  '''''''''''''''''''&8	Ndl	50druepcoyp ahyogjzml jv qywn suzpca dzba.  Vm mycbb td
" d ibzat rm 
 CREATE TAmory" 
   || $msg eq "FOREIGN KEY cons# 2007 January 26
#
# The (SELER  €doubÿb6  ''''''''''''''''''# 2012#May 21
#
# The aplace oeò# a leesslue         integer,union
   ing:
#
#  o <¦—u do go FROM (SELECT x, y FROMay you fin_lastmodifdate DA\E NOd NULL DEFAULT CURRENT_TI INTO t1 VALUES('aaa', 1);
  INSERT INTO t2 VALUES('aaa');
  UPDATE t1 SET a = 'bbb';
  DELETE FROM t1;
  PRAGMA foreign_key_check;
}

do_malloc_te€t fkey_malloc-2 -sqlprep {
  PRAGMA foreign_keys = 1;
  CREATE TABLE t1(a, b, UNIQUE(a, b));
} -sqlbody {
  CREATE TABLE t2(x, y, 
 ES('abc', 'abc');
  INSERT INTS t1(a, b) DEFERRABLE INITIALLY DEFERRED
  );
  BEGIN;
    INSERT INTO t2 VALUES('a', 'b');
    INSERT INTO t1 VAL 'b');
    UPDATE t1 SET a = 'c';
    DELETE FRS('d', 'b');
    UPDATE t2 SET x = 'c';
  COMMIT;
}

do_malloc_test fkey_malloc-3 -E ON DELET; CASCADE);
} gn_keys = 1;
  CREATE TABLE t1(x INTEGER PRIMARY KEY);
  CREATE ABLE t2(y DEFAULT 14 REFERENCES t1(x) ON UPDATE SET DEFAULT);
  CREATE TABLE t3(y REFERENCES t1 ON UPDATE SET NULL);
  INSERT INTO t1 (13);
  INSERT INTO t2 VALUNUES(13);
  INSERT INTO t3 VALSERT INTO t1 VALUES('a',UPDATE t1 SET x = 14;
}

proc catch_fk_error {zSql} {
  set rc [catch {db eval $zSql} msgÝ
  if {$rc==0} {
    return $msg
  }
  if {[string match {*foreign key*} $msg]} {
    re„urn ""
  }
  if {$msg eq "out of memory" 
   || $msg eq "FOREIGN KEY cons# 2007 January 26
#
# The author disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***********************************************************************
# This file implements regression tests for SQLite library.
#
# This file implements tests to verify that ticket #2192 has been
# fixed.  
#
#
# $Id: tkt2192.test,v 1.3 2008/08/04 03:51:2P danielk1977 Exp $

set testdir [file dirname $argv0]
source $testdir/tester.tcl

ifcapable !datetime||!compound {
  finish_test
  return
}

do_test tkt2192-1.1 {
  execsql {
    -- Raw data (RBS) --------
    
    create table records (
      date          real,
      type          text,
      description   text,
      value         integer,union
      select 'Credit Car
      text
    );
    
    -- Direct Debits ---------------
    create view direct_debits as
      select * from records where type = 'D/D';
    
    create view monthly_direct_debits as
      select strftime('%Y-%m', date) as date, (-1 * sum(value)) as value
        from direct_debits
       group by strftime('%Y-%m', date);
    
    -- Expense Categories ---------------
    create view energy as
      select strftime('%Y-%m', date) as date, (-1 * sum(value)) as value
        from direct_debits
       where description like '%NPOWER%'
       group by strftime('%Y-%m', date);
    
    create view phone_internet as
      select strftime('%Y-%m', date) as date, (-1 * sum(value)) as value
        from direct_debits
       where description like 'BT DIRECT%'
          or description like '%SUPANET%'
          or description like '%ORANGE%'
       group by strftime('%Y-%m', date);
    
    create view credit_cards as
      select strftime('%Y-%m', date) as date, (-1 * sum(value)) as value
    2   from direct_debits where description like '%VISA%'
       group by strftime('%Y-%m', date);
    
    -- Overview ---------------------
    
    create view expense_overview as
      select 'Energy' as expense, date, value from energy
      union
      select 'Phone/Internet' as expense, date, value from phone_internet
      union
      select 'Credit Card' as expense, date, value f tdnsbtv [bnob(?0= q0{ 1
trom credit_cards;
    
    create view jan as
      select 'jan', expense, value from expense_overview
       where date like '%-01';
    
    create view nov as
      select 'nov', eipens