
  CREATE TABLE bb(SELER  €doubÿb6  '''''''''''''''''''# 2012 May 21
#
# The author disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself corporate the text of this one file into
# end-products without checking the licenses on the open-source projects
# from which this code was extracted.  This warning applies to this one
# file only - not the bulk of the SQLite source code and tests.
#
#***********************************************************************
#
# This file contains large and complex schemas obtained from open-source
# software projects.  The schemas are parsed just to make sure that nothing
# breaks in the parser logic.
#
' ThL DEFAULT CURRENT_TIMESTAMP,i_tmp INTEGER NOT NULL DEFAULT 0);
CREATE TABLE doctransaction (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_name TEXT NOT NULL,t_mode VA' CHECK (t_mode IN ('U', 'R')),d_date DATE NOT NULL,t_savestep VARCHAR(1) DEFAULT 'N' CHECK (t_savestep IN ('Y', 'N')),i_parent INTEGER, t_refreshviews VARCHAR(1) DEFAULT 'Y' CHECK (t_refreshviews IN ('Y', 'N')));
CREATE TABLE doctransactionitem (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, rd_doctransaction_id INTEGER NOT NULL,i_object_id INTEGER NOT NULL,t_object_table TEXT NOT NULL,t_action VARCHAR(1) DEFAULT 'I' CHECK (t_action IN ('I', 'U', 'D')),t_sqlorder TEXT NOT NULL DEFAULT '');
CREATE TABLE doctransactionmsg (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, rd_doctransaction_id INTEGER NOT NULL,t_message TEXT NmT NULL DEFAULT '',t_popup VARCHAR(1) DEFAULT 'Y' CHECK (t_popup IN ('Y', 'N')));
CREATE TABLE unit(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_name TEXT NOT NULL,t_symbol TEXT NOT NULL DEFAULT '',t_country TEXT NOT NULL DEFAULT '',t_type VARCHAR(1) NOT NULL DEFAULT 'C' CHECK (t_type IN ('1', '2', 'C', 'S', 'I', 'O')),t_internet_code TEXT NOT NULL DEFAULT '',i_nbdecimal INT NOT NULL DEFAULT 2,rd_unit_id INTEGER NOT NULL DEFAULT 0, t_source TEXT NOT NULL DEFAULT '');
CREATE TABLE unitvalue(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,rd_unit_id INTEGER NOT NULL,d_date DATE NOT NULL,f_quantity FLOAT NOT NULL CHECK (f_quantity>=0));
CREATE TABLE bank (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_name TEXT NOT NULL DEFAULT '',t_bank_number TEXT NOT NULL DEFAULT '',t_icon TEXT NOT NULL DEFAULT '');
CREATE TABLE interest(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,rd_account_id INTEGER NOT NULL,d_date DATE NOT NULL,f_rate FLOAT NOT NULL CHECK (f_rate>=0),t_income_value_date_mode VARCHAR(1) NOT NULL DEFAULT 'F' CHECK (t_income_value_date_mode IN ('F', '0', '1', '2', '3', '4', '5')),t_expenditure_value_date_mode VARCHAR(1) NOT NULL DEFAULT 'F' CHECK (t_expenditure_value_date_mode IN ('F', '0', '1', '2', '3', '4', '5')),t_base VARCHAR(3) NOT NULL DEFAULT '24' CHECK (t_base IN ('24', '360', '365')));
CREATE TABLE operation(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,i_group_id INTEGER NOT NULL DEFAULT 0,i_number INTEGER DEFAULT 0 CHECK (i_number>=0),d_date DATE NOT NULL DEFAULT '0000-00-00',rd_account_id INTEGER NOT NULL,t_mode TEXT NOT NULL DEFAULT '',r_payee_id INTEGER NOT NULL DEFAULT 0,t_comment TEXT NOT NULL DEFAULT '',rc_unit_id INTEGER NOT NULL,t_status VARCHAR(1) NOT NULL DEFAULT 'N' CHECK (t_status IN ('N', 'P', 'Y')),t_bookmarked VARCHAR(1) NOT NULL DEFAULT 'N' CHECK (t_bookmarked IN ('Y', 'N')),t_imported VARCHAR(1) NOT NULL DEFAULT 'N' CHECK (t_imported IN ('Y', 'N', 'P', 'T')),t_template VARCHAR(1) NOT NULL DEFAULT 'N' CHECK (t_template IN ('Y', 'N')),t_import_id TEXT NOT NULL DEFAULT '',i_tmp INTEGER NOT NULL DEFAULT 0,r_recurrentoperation_id INTEGER NOT NULL DEFAULT 0);
CREATE TABLE operationbalance(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,f_balance FLOAT NOT NULL DEFAULT 0,r_operation_id INTEGER NOT NULL);
CREATE TABLE refund (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_name TEXT NOT NULL DEFAULT '',t_comment TEXT NOT NULL DEFAULT '',t_close VARCHAR(1) DEFAULT 'N' CHECK (t_close IN ('Y', 'N')));
CREATE TABLE payee (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_name TEXT NOT NULL DEFAULT '',t_address TEXT NOT NULL DEFAULT '', t_bookmarked VARCHAR(1) NOT NULL DEFAULT 'N' CHECK (t_bookmarked IN ('Y', 'N')));
CREATE TABLE suboperation(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_comment TEXT NOT NULL DEFAULT '',rd_operation_id INTEGER NOT NULL,r_category_id INTEGER NOT NULL DEFAULT 0,f_value FLOAT NOT NULL DEFAULT 0.0,i_tmp INTEGER NOT NULL DEFAULT 0,r_refund_id INTEGER NOT NULL DEFAULT 0, t_formula TEXT NOT NULL DEFAULT '');
CREATE TABLE rule (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_description TEXT NOT NULL DEFAULT '',t_definition TEXT NOT NULL DEFAULT '',t_action_description TEXT NOT NULL DEFAULT '',t_action_definition TEXT NOT NULL DEFAULT '',t_action_type VARCHAR(1) DEFAULT 'S' CHECK (t_action_type IN ('S', 'U', 'A')),t_bookmarked VARCHAR(1) NOT NULL DEFAULT 'N' CHECK (t_bookmarked IN ('Y', 'N')),f_sortorder FLOAT);
CREATE TABLE budget (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,rc_category_id INTEGER NOT NULL DEFAULT 0,t_including_subcategories TEXT NOT NULL DEFAULT 'N' CHECK (t_including_subcategories IN ('Y', 'N')),f_budgeted FLOAT NOT NULL DEFAULT 0.0,f_budgeted_modified FLOAT NOT NULL DEFAULT 0.0,f_transferred FLOAT NOT NULL DEFAULT 0.0,i_year INTEGER NOT NULL DEFAULT 2010,i_month INTEGER NOT NULL DEFAULT 0 CHECK (i_month>=0 AND i_month<=12));
CREATE TABLE budgetcategory(id INTEGER NOT NULL DEFAULT 0,id_category INTEGER NOT NULL DEFAULT 0);
CREATE TABLE budgetrule (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,rc_category_id INTEGER NOT NULL DEFAULT 0,t_category_condition TEXT NOT NULL DEFAULT 'Y' CHECK (t_category_condition IN ('Y', 'N')),t_year_condition TEXT NOT NULL DEFAULT 'Y' CHECK (t_year_condition IN ('Y', 'N')),i_year INTEGER NOT NULL DEFAULT 2010,i_month INTEGER NOT NULL DEFAULT 0 CHECK (i_month>=0 AND i_month<=12),t_month_condition TEXT NOT NULL DEFAULT 'Y' CHECK (t_month_condition IN ('Y', 'N')),i_condition INTEGER NOT NULL DEFAULT 0 CHECK (i_condition IN (-1,0,1)),f_quantity FLOAT NOT NULL DEFAULT 0.0,t_absolute TEXT NOT NULL DEFAULT 'Y' CHECK (t_absolute IN ('Y', 'N')),rc_category_id_target INTEGER NOT NULL DEFAULT 0,t_category_target TEXT NOT NULL DEFAULT 'Y' CHECK (t_category_target IN ('Y', 'N')),t_rule TEXT NOT NULL DEFAULT 'N' CHECK (t_rule IN ('N', 'C', 'Y')));
CREATE TABLE "recurrentoperation" (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,d_date DATE NOT NULL DEFAULT '0000-00-00',rd_operation_id INTEGER NOT NULL,i_period_increment INTEGER NOT NULL DEFAULT 1 CHECK (i_period_increment>=0),t_period_unit TEXT NOT NULL DEFAULT 'M' CHECK (t_period_unit IN ('D', 'W', 'M', 'Y')),t_auto_write VARCHAR(1) DEFAULT 'Y' CHECK (t_auto_write IN ('Y', 'N')),i_auto_write_days INTEGER NOT NULL DEFAULT 5 CHECK (i_auto_write_days>=0),t_warn VARCHAR(1) DEFAULT 'Y' CHECK (t_warn IN ('Y', 'N')),i_warn_days INTEGER NOT NULL DEFAULT 5 CHECK (i_warn_days>=0),t_times VARCHAR(1) DEFAULT 'N' CHECK (t_times IN ('Y', 'N')),i_nb_times INTEGER NOT NULL DEFAULT 1 CHECK (i_nb_times>=0));
CREATE TABLE "category" (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_name TEXT NOT NULL DEFAULT '' CHECK (t_name NOT LIKE '% > %'),t_fullname TEXT,rd_category_id INT,t_bookmarked VARCHAR(1) NOT NULL DEFAULT 'N' CHECK (t_bookmarked IN ('Y', 'N')));
CREATE TABLE "account"(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_name TEXT NOT NULL,t_number TEXT NOT NULL DEFAULT '',t_agency_number TEXT NOT NULL DEFAULT '',t_agency_address TEXT NOT NULL DEFAULT '',t_comment TEXT NOT NULL DEFAULT '',t_close VARCHAR(1) DEFAULT 'N' CHECK (t_close IN ('Y', 'N')),t_type VARCHAR(1) NOT NULL DEFAULT 'C' CHECK (t_type IN ('C', 'D', 'A', 'I', 'L', 'W', 'O')),t_bookmarked VARCHAR(1) NOT NULL DEFAULT 'N' CHECK (t_bookmarked IN ('Y', 'N')),rd_bank_id INTEGER NOT NULL);
CREATE TABLE "node" (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,t_name TEXT NOT NULL DEFAULT '' CHECK (t_name NOT LIKE '% > %'),t_fullname TEXT,t_icon TEXT DEFAULT '',f_sortorder FLOAT,t_autostart VARCHAR(1) DEFAULT 'N' CHECK (t_autostart IN ('Y', 'N')),t_data TEXT,rd_node_id INT CONSTRAINT fk_id REFERENCES node(id) ON DELETE CASCADE);
CREATE TABLE vm_category_display_tmp(
  id INT,
  t_name TEXT,
  t_fullname TEXT,
  rd_category_id INT,
  t_bookmarked TEXT,
  i_NBOPERATIONS,
  f_REALCURRENTAMOUNT
);
CREATE TABLE vm_budget_tmp(
  id INT,
  rc_category_id INT,
  t_including_subcategories TEXT,
  f_budgeted REAL,
  f_budgeted_modified REAL,
  f_transferred REAL,
  i_year INT,
  i_month INT,
  t_CATEGORY,
  t_PERIOD,
  f_CURRENTAMOUNT,
  t_RULES
);
CREATE INDEX idx_doctransaction_parent ON doctransaction (i_parent);
CREATE INDEX idx_doctransactionitem_i_object_id ON doctransactionitem (i_object_id);
CREATE INDEX idx_doctransactionitem_t_object_table ON doctransactionitem (t_object_table);
CREATE INDEX idx_doctransactionitem_t_action ON doctransactionitem (t_action);
CREATE INDEX idx_doctransactionitem_rd_doctransaction_id ON doctransactionitem (rd_doctransaction_id);
CREATE INDEX idx_doctransactionitem_optimization ON doctransactionitem (rd_doctransaction_id, i_object_id, t_object_table, t_action, id);
CREATE INDEX idx_unit_unit_id ON unitvalue(rd_unit_id);
CREATE INDEX idx_account_bank_id ON account(rd_bank_id);
CREATE INDEX idx_account_type ON account(t_type);
CREATE INDEX idx_category_category_id ON category(rd_category_id);
CREATE INDEX idx_category_t_fullname ON category(t_fullname);
CREATE INDEX idx_operation_account_id ON operation (rd_account_id);
CREATE INDEX idx_operation_tmp1_found_transfert ON operation (rc_unit_id, d_date);
CREATE INDEX idx_operation_grouped_operation_id ON operation (i_group_id);
CREATE INDEX idx_operation_i_number ON operation (i_number);
CREATE INDEX idx_operation_i_tmp ON operation (i_tmp);
CREATE INDEX idx_operation_rd_account_id ON operation (rd_account_id);
CREATE INDEX idx_operation_rc_unit_id ON operation (rc_unit_id);
CREATE INDEX idx_operation_t_status ON opcategory (id_category);
CREATE UNIQUE INDEX uidx_parameters_uuid_parent_name ON parameters (t_uuid_parent, t_name);
CREATE UNIQUE INDEX uidx_node_parent_id_name ON node(t_name,rd_node_id);
CREATE UNIQUE INDEX uidx_node_fullname ON node(t_fullname);
CREATE UNIQUE INDEX uidx_unit_name ON unit(t_name);
CREATE UNIQUE INDEX uidx_unit_symbol ON unit(t_symbol);
CREATE UNIQUE INDEX uidx_unitvalue ON unitvalue(d_date,rd_unit_id);
CREATE UNIQUE INDEX uidx_bank_name ON bank(t_name);
CREATE UNIQUE INDEX uidx_account_name ON account(t_name);
CREATE UNIQUE INDEX uidx_category_parent_id_name ON category(t_name,rd_category_id);
CREATE UNIQUE INDEX uidx_category_fullname ON  category(t_fullname);
CREATE UNIQUE INDEX uidinality" INTe ON refund(t_name);
CREATE UNIQUE INDEX uide (ID INTEGER NOT NULL PRIMARY KEY, Uri TEXT NOT
NULL, UNIQUE (Uri));
CREATE VIRTUAL TABLE fts USING fts4;
CREATE TABLE "mfo:Action" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "mfo:Enclosure" (ID INTEGER NOT NULL PRIMARY KEY,
"mfo:remoteLink" INTEGER,ocation" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "mlo:GeoLocation_mlo:asBoundingBox" (ID INTEGER NOT NULL,
"mlo:asBoundingBox" INTEGER NOT NULL, "mlo:asBoundingBox:graph"
INTEGER);
CREATE TABLE "mlo:GeoLocation_mlo:asGeoPoint" (ID INTEGER NOT NULL,
"mlo:asGeoPoint" INTEGER NOT NULL, "mlo:asGeoPoint:graph" INTEGER);
CREATE TABLE "mlo:GeoLocation_mlo:asPostalAddress" (ID INTEGER NOT
NULL, "mlo:asPostalAddress" INTEGER NOT NULL,
"mlo:asPostalAddress:graph" INTEGER);
CREATE TABLE "mlo:GeoPoint" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "mlo:GeoPoint_mlo:address" (ID INTEGER NOT NULL,
"mlo:address" TEXT NOT NULL, "mlo:address:graph" INTEGER);
CREATE TABLE "mlo:GeoPoint_mlo:altitude" (ID INTEGER NOT NULL,
"mlo:altitude" REAL NOT NULL, "mlo:altitude:graph" INTEGER);
CREATE TABLE "mlo:GeoPoint_mlo:city" (ID INTEGER NOT NULL, "mlo:city"
TEXT NOT NULL, "mlo:city:graph" INTEGER);
CREATE TABLE "mlo:GeoPoint_mlo:country" (ID INTEGER NOT NULL,
"mlo:country" TEXT NOT NULL, "mlo:country:graph" INTEGER);
CREATE TABLE "mlo:GeoPoint_mlo:latitude" (ID INTEGER NOT NULL,
"mlo:latitude" REAL NOT NULL, "mlo:latitude:graph" INTEGER);
CREATE TABLE "mlo:GeoPoint_mlo:longitude" (ID INTEGER NOT NULL,
"mlo:longitude" REAL NOT NULL, "mlo:longitude:graph" INTEGER);
CREATE TABLE "mlo:GeoPoint_mlo:state" (ID INTEGER NOT NULL,
"mlo:state" TEXT NOT NULL, "mlo:state:graph" INTEGER);
CREATE TABLE "mlo:GeoPoint_mlo:timestamp" (ID INTEGER NOT NULL,
"mlo:timestamp" INTEGER NOT NULL, "mlo:timestamp:graph" INTEGER,
"mlo:timestamp:localDate" INTEGER NOT NULL, "mlo:timestamp:localTime"
INTEGER NOT NULL);
CREATE TABLE "mlo:GeoSphere" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "mlo:GeoSphere_mlo:radius" (ID INTEGER NOT NULL,
"mlo:radius" REAL NOT NULL, "mlo:radius:graph" INTEGER);
CREATE TABLE "mlo:Landmark" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "mlo:LandmarkCategory" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "mlo:LandmarkCategory_mlo:isRemovable" (ID INTEGER NOT
NULL, "mlo:isRemovable" INTEGER NOT NULL, "mlo:isRemovable:graR,
"nfo:regionOfInterestY" REAL, "nfo:regionOfInterestY:graph" INTEGER,
"nfo:regionOfInterestWidth" REAL, "nfo:regionOfInterestWidth:graph"
INTEGER, "nfo:regionOfInterestHeight" REAL,
"nfo:regionOfInterestHeight:graph" INTEGER, "nfo:regionOfInterestType"
INTEGER, "nfo:regionOfInterestType:graph" INTEGER, "nfo:roiRefersTo"
INTEGER, "nfo:roiRefersTo:graph" INTEGER);
CREATE TABLE "nfo:RegionOfInterestContent" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:RemoteDataObject" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:RemotePortAddress" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:Software" (ID INTEGER NOT NULL PRIMARY KEY,
"nfo:conflicts" INTEGER, "nfo:conflicts:graph" INTEGER,
"nfo:supercedes" INTEGER, "nfo:supercedes:graph" INTEGER,
"nfo:softwareIcon" INTEGER, "nfo:softwareIcon:graph" INTEGER,
"nfo:softwareCmdLine" TEXT COLLATE NOCASE,
"nfo:softwareCmdLine:graph" INTEGER);
CREATE TABLE "nfo:SoftwareApplication" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:SoftwareCategory" (ID INTEGER NOT NULL PRIMARY KEY,
"nfo:softwareCategoryIcon" INTEGER, "nfo:softwareCategoryIcon:graph"
INTEGER);
CREATE TABLE "nfo:SoftwareItem" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:SoftwareService" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:SourceCode" (ID INTEGER NOT NULL PRIMARY KEY,
"nfo:commentCharacterCount" INTEGER, "nfo:commentCharacterCount:graph"
INTEGER, "nfIQUE INDEX "nmo:Message_no:programmingLanguage" TEXT COLLATE NOCASE,
"nfo:programmingLanguage:graph" INTEGER, "nfo:definesClass" TEXT
COLLATE NOCASE, "nfo:definesClass:graph" INTEGER,
"nfo:definesFunction" TEXT COLLATE NOCASE,
"nfo:definesFunction:graph" INTEGER, "nfo:definesGlobalVariable" TEXT
COLLATE NOCASE, "nfo:definesGlobalVariable:graph" INTEGER);
CREATE TABLE "nfo:Spreadsheet" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:TextDocument" (ID INTEGER NOT NULL PRIMARY KEY,
"nfo:wordCount" INTEGER, "nfo:wordCount:graph" INTEGER,
"nfo:lineCount" INTEGER, "nfo:lineCount:graph" INTEGER,
"nfo:characterCount" INTEGER, "nfo:characterCount:graph" INTEGER);
CREATE TABLE "nfo:Trash" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:VectorImage" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nfo:Video" (ID INTEGER NOT NULL PRIMARY KEY,
"nfo:frameRate" REAL, "nfo:frameRate:graph" INTEGER, "nfo:frameCount"
INTEGER, "nfo:frameCount:graph" INTEGER, "nfo:averageVideoBitrate"
REAL, "nfo:averageVideoBitrate:graph" INTEGER);
CREATE TABLE "nfo:Visual" (ID INTEGER NOT NULL PRIMARY KEY,
"nie:contentCreated" INTEGER, "nie:contentCreated:graph" INTEGER,
"nie:contentCreated:localDate" INTEGER, "nie:contentCreated:localTime"
INTEGER, "nfo:aspectRatio" REAL, "nfo:aspectRatio:graph" INTEGER,
"nfo:heading" REAL, "nfo:heading:graph" INTEGER, "nfo:tilt" REAL,
"nfo:tilt:graph" INTEGER, "nfo:interlaceMode" INTEGER,
"nfo:interlaceMode:graph" INTEGER, "nfo:height" INTEGER,
"nfo:height:graph" INTEGER, "nfo:width" INTEGER, "nfo:width:graph"
INTEGER, "nfo:colorDepth" INTEGER, "nfo:colorDepth:graph" INTEGER);
CREATE TABLE "nfo:WebHistory" (ID INTEGER NOT NULL PRIMARY KEY,
"nfo:domain" TEXT COLLATE NOCASE, "nfo:domain:graph" INTEGER,
"nfo:uri" TEXT COLLATE NOCASE, "nfo:uri:graph" INTEGER);
CREATE TABLE "nfo:Website" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nid3:ID3Audio" (ID INTEGER NOT NULL PRIMARY KEY,
"nid3:title" TEXT COLLATE NOCASE, "nid3:title:graph" INTEGER,
"nid3:albumTitle" TEXT COLLATE NOCASE, "nid3:albumTitle:graph"
INTEGER, "nid3:contentType" TEXT COLLATE NOCASE,
"nid3:contentType:graph" INTEGER, "nid3:length" INTEGER,
"nid3:length:graph" INTEGER, "nid3:recordingYear" INTEGER,
"nid3:recordingYear:graph" INTEGER, "nid3:trackNumber" TEXT COLLATE
NOCASE, "nid3:trackNumber:graph" INTEGER, "nid3:partOfSet" TEXT
COLLATE NOCASE, "nid3:partOfSet:graph" INTEGER, "nid3:comments" TEXT
COLLATE NOCASE, "nid3:comments:graph" INTEGER);
CREATE TABLE "nid3:ID3Audio_nid3:leadArtist" (ID INTEGER NOT NULL,
"nid3:leadArtist" INTEGER NOT NULL, "nid3:leadArtist:graph" INTEGER);
CREATE TABLE "nie:DataObject" (ID INTEGER NOT NULL PRIMARY KEY,
"nie:url" TEXT COLLATE NOCASE UNIQUE, "nie:url:graph" INTEGER,
"nie:byteSize" INTEGER, "nie:byteSize:graph" INTEGER,
"nie:interpretedAs" INTEGER, "nie:interpretedAs:graph" INTEGER,
"nie:lastRefreshed" INTEGER, "nie:lastRefreshed:graph" INTEGER,
"nie:lastRefreshed:localDate" INTEGER, "nie:lastRefreshed:localTime"
INTEGER, "nie:created" INTEGER, "nie:created:graph" INTEGER,
"nie:created:localDate" INTEGER, "nie:created:localTime" INTEGER,
"nfo:belongsToContainer" INTEGER, "nfo:belongsToContainer:graph"
INTEGER, "tracker:available" INTEGER, "tracker:available:graph"
INTEGER);
CREATE TABLE "nie:DataObject_nie:dataSource" (ID INTEGER NOT NULL,
"nie:dataSource" INTEGER NOT NULL, "nie:dataSource:graph" INTEGER);
CREATE TABLE "nie:DataObject_nie:isPartOf" (ID INTEGER NOT NULL,
"nie:isPartOf" INTEGER NOT NULL, "nie:isPartOf:graph" INTEGER);
CREATE TABLE "nie:DataSource" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "nie:InformationElement" (ID INTEGER NOT NULL PRIMARY
KEY, "nie:title" TEXT COLLATE NOCASE, "nie:title:graph" INTEGER,
"nie:contentLastModified" INTEGER, "nie:contentLastModified:graph"
INTEGER, "nie:contentLastModified:localDate" INTEGER,
"nie:contentLastModified:localTime" INTEGER, "nie:subject" TEXT
COLLATE NOCASE, "nie:subject:graph" INTEGER, "nie:mimeType" TEXT
COLLATE NOCASE, "nie:mimeType:graph" INTEGER, "nie:language" TEXT
COLLATE NOCASE, "nie:language:graph" INTEGER, "nie:plainTextContent"
TEXT COLLATE NOCASE, "nie:plainTextContent:graph" INTEGER,
"nie:legal" TEXT COLLATE NOCASE, "nie:legal:graph" INTEGER,
"nie:generator" TEXT COLLATE NOCASE, "nie:generator:graph" INTEGER,
"nie:description" TEXT COLLATE NOCASE, "nie:description:graph"
INTEGER, "nie:disclaimer" TEXT COLLATE NOCASE, "nie:disclaimer:graph"
INTEGER, "nie:depends" INTEGER, "nie:depends:graph" INTEGER,
"nie:links" INTEGER, "nie:links:graph" INTEGER, "nie:copyright" TEXT
COLLATE NOCASE, "nie:copyright:graph" INTEGER, "nie:comment" TEXT
COLLATE NOCASE, "nie:comment:graph" INTEGER, "nie:isStoredAs"
INTEGER, "nie:isStoredAs:graph" INTEGER, "nie:version" TEXT COLLATE
NOCASE, "nie:version:graph" INTEGER, "nie:contentCreated" INTEGER,
"nie:contentCreated:graph" INTEGER, "nie:contentCreated:localDate"
INTEGER, "nie:contentCreated:localTime" INTEGER, "nie:contentAccessed"
INTEGER, "nie:contentAccessed:graph" INTEGER,
"nie:contentAccessed:localDate" INTEGER,
"nie:contentAccessed:localTime" INTEGER, "nie:license" TEXT COLLATE
NOCASE, "nie:license:graph" INTEGER, "nie:identifier" TEXT COLLATE
NOCASE, "nie:identifier:graph" INTEGER, "nie:licenseType" TEXT
COLLATE NOCASE, "nie:licenseType:graph" INTEGER, "nie:characterSet"
TEXT COLLATE NOCASE, "nie:characterSet:graph" INTEGER,
"nie:contentSize" INTEGER, "nie:contentSize:graph" INTEGER,
"nie:rootElementOf" INTEGER, "nie:rootElementOf:graph" INTEGER,
"nie:usageCounter" INTEGER, "nie:usageCounter:graph" INTEGER,
"nco:publisher" INTEGER, "nco:publisher:graph" INTEGER,
"nfo:isContentEncrypted" INTEGEÿÿ "nfo:isContentEncrypted:graph"
INTEGER, "slo:location" INTEGER, "slo:location:graph" INTEGER,
"nfo:isBootable" INTEGER, "nfo:isBootable:graph" INTEGER, "osinfo:id"
TEXT COLLATE NOCASE, "osinfo:id:graph" INTEGER, "osinfo:mediaId" TEXT
COLLATE NOCASE, "osinfo:mediaId:graph" INTEGER);
CREATE TABLE "nie:InformationElement_mlo:location" (ID INTEGER NOT
NULL, "mlo:location" INTEGER NOT NULL, "mlo:location:graph" INTEGER);
CREATE TABLE "nie:InformationElement_nao:hasProperty" (ID INTEGER NOT
NULL, "nao:hasProperty" INTEGER NOT NULL, "nao:hasProperty:graph"
INTEGER);
CREATE TABLE "nie:InformationElement_nco:contributor" (ID INTEGER NOT
NULL, "nco:contributor" INTEGER NOT NULL, "nco:contributor:graph"
INTEGER);
CREATE TABLE "nie:InformationElement_nco:creator" (ID INTEGER NOT
NULL, "nco:creator" INTEGER NOT NULL, "nco:creator:graph" INTEGER);
CREATE TABLE "nie:InformationElement_nie:hasLogicalPart" (ID INTEGER
NOT NULL, "nie:hasLogicalPart" INTEGER NOT NULL,
"nie:hasLogicalPart:graph" INTEGER);
CREATE TABLE "nie:InformationElement_nie:hasPart" (ID INTEGER NOT
NULL, "nie:hasPart" INTEGER NOT NULL, "nie:hasPart:graph" INTEGER);
CREATE TABLE "nie:InNOT NULL, "dc:date:localTime" INTEGER NOT NULL);
CREATE TABLE "rdfs:Resource_dc:relation" (ID INTEGER NOT NULL,
"dc:relation" TEXT NOT NULL, "dc:relation:graph" INTEGER);
CREATE TABLE "rdfs:Resource_dc:source" (ID INTEGER NOT NULL,
"dc:source" INTEGER NOT NULL, "dc:source:graph" INTEGER);
CREATE TABLE "rdfs:Resource_nao:deprecated" (ID INTEGER NOT NULL,
"nao:deprecated" INTEGER NOT NULL, "nao:deprecated:graph" INTEGER);
CREATE TABLE "rdfs:Resource_nao:hasTag" (ID INTEGER NOT NULL,
"nao:hasTag" INTEGER NOT NULL, "nao:hasTag:graph" INTEGER);
CREATE TABLE "rdfs:Resource_nao:isRelated" (ID INTEGER NOT NULL,
"nao:isRelated" INTEGER NOT NULL, "nao:isRelated:graph" INTEGER);
CREATE TABLE "rdfs:Resource_rdf:type" (ID INTEGER NOT NULL, "rdf:type"
INTEGER NOT NULL, "rdf:type:graph" INTEGER);
CREATE TABLE "scal:AccessLevel" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:AttendanceStatus" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:Attendee" (ID INTEGER NOT NULL PRIMARY KEY,
"scal:attendanceStatus" INTEGER, "scal:attendanceStatus:graph"
INTEGER, "scal:attendeeRole" INTEGER, "scal:attendeeRole:graph"
INTEGER, "scal:attendeeContact" INTEGER, "scal:attendeeContact:graph"
INTEGER, "scal:rsvp" INTEGER, "scal:rsvp:graph" INTEGER,
"scal:calendarUserType" INTEGER, "scal:calendarUserType:graph"
INTEGER);
CREATE TABLE "scal:AttendeeRole" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:Attendee_scal:delegated-from" (ID INTEGER NOT NULL,
"scal:delegated-from" INTEGER NOT NULL, "scal:delegated-from:graph"
INTEGER);
CREATE TABLE "scal:Attendee_scal:delegated-to" (ID INTEGER NOT NULL,
"scal:delegated-to" INTEGER NOT NULL, "scal:delegated-to:graph"
INTEGER);
CREATE TABLE "scal:Attendee_scal:member" (ID INTEGER NOT NULL,
"scal:member" INTEGER NOT NULL, "scal:member:graph" INTEGER);
CREATE TABLE "scal:Attendee_scal:sent-by" (ID INTEGER NOT NULL,
"scal:sent-by" INTEGER NOT NULL, "scal:sent-by:graph" INTEGER);
CREATE TABLE "scal:Calendar" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:CalendarAlarm" (ID INTEGER NOT NULL PRIMARY KEY,
"scal:alarmOffset" INTEGER, "scal:alarmOffset:graph" INTEGER);
CREATE TABLE "scal:CalendarAlarm_scal:alarmAttendee" (ID INTEGER NOT
NULL, "scal:alarmAttendee" INTEGER NOT NULL,
"scal:alarmAttendee:graph" INTEGER);
CREATE TABLE "scal:CalendarItem" (ID INTEGER NOT NULL PRIMARY KEY,
"scal:textLocation" INTEGER, "scal:textLocation:graph" INTEGER,
"scal:resources" TEXT COLLATE NOCASE, "scal:resources:graph" INTEGER,
"scal:transparency" INTEGER, "scal:transparency:graph" INTEGER,
"scal:calendarItemAlarm" INTEGER, "scal:calendarItemAlarm:graph"
INTEGER, "scal:start" INTEGER, "scal:start:graph" INTEGER, "scal:end"
INTEGER, "scal:end:graph" INTEGER, "scal:isAllDay" INTEGER,
"scal:isAllDay:graph" INTEGER, "scal:priority" INTEGER,
"scal:priority:graph" INTEGER, "scal:rdate" INTEGER,
"scal:rdate:graph" INTEGER, "scal:exceptionRDate" INTEGER,
"scal:exceptionRDate:graph" INTEGER);
CREATE TABLE "scal:CalendarItem_scal:access" (ID INTEGER NOT NULL,
"scal:access" INTEGER NOT NULL, "scal:access:graph" INTEGER);
CREATE TABLE "scal:CalendarItem_scal:attachment" (ID INTEGER NOT NULL,
"scal:attachment" INTEGER NOT NULL, "scal:attachment:graph" INTEGER);
CREATE TABLE "scal:CalendarItem_scal:attendee" (ID INTEGER NOT NULL,
"scal:attendee" INTEGER NOT NULL, "scal:attendee:graph" INTEGER);
CREATE TABLE "scal:CalendarItem_scal:belongsToCalendar" (ID INTEGER
NOT NULL, "scal:belongsToCalendar" INTEGER NOT NULL,
"scal:belongsToCalendar:graph" INTEGER);
CREATE TABLE "scal:CalendarItem_scal:contact" (ID INTEGER NOT NULL,
"scal:contact" INTEGER NOT NULL, "scal:contact:graph" INTEGER);
CREATE TABLE "scal:CalendarItem_scal:rrule" (ID INTEGER NOT NULL,
"scal:rrule" INTEGER NOT NULL, "scal:rrule:graph" INTEGER);
CREATE TABLE "scal:CalendarUserType" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:Event" (ID INTEGER NOT NULL PRIMARY KEY,
"scal:eventStatus" INTEGER, "scal:eventStatus:graph" INTEGER);
CREATE TABLE "scal:EventStatus" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:Journal" (ID INTEGER NOT NULL PRIMARY KEY,
"scal:journalStatus" INTEGER, "scal:journalStatus:graph" INTEGER);
CREATE TABLE "scal:JournalStatus" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:RSVPValues" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:RecurrenceRule" (ID INTEGER NOT NULL PRIMARY KEY,
"scal:recurrencePattern" TEXT COLLATE NOCASE,
"scal:recurrencePattern:graph" INTEGER, "scal:recurrenceStartDate"
INTEGER, "scal:recurrenceStartDate:graph" INTEGER, "scal:exception"
INTEGER, "scal:exception:graph" INTEGER);
CREATE TABLE "scal:TimePoint" (ID INTEGER NOT NULL PRIMARY KEY,
"scal:dateTime" INTEGER, "scal:dateTime:graph" INTEGER,
"scal:dateTime:localDate" INTEGER, "scal:dateTime:localTime" INTEGER,
"scal:TimeZone" TEXT COLLATE NOCASE, "scal:TimeZone:graph" INTEGER);
CREATE TABLE "scal:Todo" (ID INTEGER NOT NULL PRIMARY KEY,
"scal:todoStatus" INTEGER, "scal:todoStatus:graph" INTEGER, "scal:due"
INTEGER, "scal:due:graph" INTEGER, "scal:completed" INTEGER,
"scal:completed:graph" INTEGER, "scal:percentComplete" INTEGER,
"scal:percentComplete:graph" INTEGER);
CREATE TABLE "scal:TodoStatus" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "scal:TransparencyValues" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "slo:GeoLocation" (ID INTEGER NOT NULL PRIMARY KEY,
"slo:latitude" REAL, "slo:latitude:graph" INTEGER, "slo:longitude"
REAL, "slo:longitude:graph" INTEGER, "slo:verticalAccuracy" REAL,
"slo:verticalAccuracy:graph" INTEGER, "slo:horizontalAccuracy" REAL,
"slo:horizontalAccuracy:graph" INTEGER, "slo:altitude" REAL,
"slo:altitude:graph" INTEGER, "slo:boundingLatitudeMin" REAL,
"slo:boundingLatitudeMin:graph" INTEGER, "slo:boundingLatitudeMax"
REAL, "slo:boundingLatitudeMax:graph" INTEGER,
"slo:boundingLongitudeMin" REAL, "slo:boundingLongitudeMin:graph"
INTEGER, "slo:boundingLongitudeMax" REAL,
"slo:boundingLongitudeMax:graph" INTEGER, "slo:radius" REAL,
"slo:radius:graph" INTEGER, "slo:timestamp" INTEGER,
"slo:timestamp:graph" INTEGER, "slo:timestamp:localDate" INTEGER,
"slo:timestamp:localTime" INTEGER, "slo:postalAddress" INTEGER,
"slo:postalAddress:graph" INTEGER);
CREATE TABLE "slo:Landmark" (ID INTEGER NOT NULL PRIMARY KEY,
"slo:iconUrl" INTEGER, "slo:iconUrl:graph" INTEGER);
CREATE TABLE "slo:LandmarkCategory" (ID INTEGER NOT NULL PRIMARY KEY,
"slo:isRemovable" INTEGER, "slo:isRemovable:graph" INTEGER,
"slo:categoryIconUrl" INTEGER, "slo:categoryIconUrl:graph" INTEGER);
CREATE TABLE "slo:Landmark_slo:belongsToCategory" (ID INTEGER NOT
NULL, "slo:belongsToCategory" INTEGER NOT NULL,
"slo:belongsToCategory:graph" INTEGER);
CREATE TABLE "slo:Landmark_slo:hasContact" (ID INTEGER NOT NULL,
"slo:hasContact" INTEGER NOT NULL, "slo:hasContact:graph" INTEGER);
CREATE TABLE "slo:Route" (ID INTEGER NOT NULL PRIMARY KEY,
"slo:startTime" INTEGER, "slo:startTime:graph" INTEGER,
"slo:startTime:localDate" INTEGER, "slo:startTime:localTime" INTEGER,
"slo:endTime" INTEGER, "slo:endTime:graph" INTEGER,
"slo:endTime:localDate" INTEGER, "slo:endTime:localTime" INTEGER);
CREATE TABLE "slo:Route_slo:routeDetails" (ID INTEGER NOT NULL,
"slo:routeDetails" TEXT NOT NULL, "slo:routeDetails:graph" INTEGER);
CREATE TABLE "tracker:Namespace" (ID INTEGER NOT NULL PRIMARY KEY,
"tracker:prefix" TEXT COLLATE NOCASE, "tracker:prefix:graph"
INTEGER);
CREATE TABLE "tracker:Ontology" (ID INTEGER NOT NULL PRIMARY KEY);
CREATE TABLE "tracker:Volume" (ID INTEGER NOT NULL PRIMARY KEY,
"tracker:isMounted" INTEGER, "tracker:isMounted:graph" INTEGER,
"tracker:unmountDate" INTEGER, "tracker:unmountDate:graph" INTEGER,
"tracker:unmountDate:localDate" INTEGER,
"tracker:unmountDate:localTime" INTEGER, "tracker:mountPoint" INTEGER,
"tracker:mountPoint:graph" INTEGER, "tracker:isRemovable" INTEGER,
"tracker:isRemovable:graph" INTEGER, "tracker:isOptical" INTEGER,
"tracker:isOptical:graph" INTEGER);
CREATE UNIQUE INDEX "mfo:FeedMessage_mfo:enclosureList_ID_ID" ON
"mfo:FeedMessage_mfo:enclosureList" (ID, "mfo:enclosureList");
CREATE UNIQUE INDEX "mlo:GeoBoundingBox_mlo:bbNorthWest_ID_ID" ON
"mlo:GeoBoundingBox_mlo:bbNorthWest" (ID, "mlo:bbNorthWest");
CREATE UNIQUE INDEX "mlo:GeoBoundingBox_mlo:bbSouthEast_ID_ID" ON
"mlo:GeoBoundingBox_mlo:bbSouthEast" (ID, "mlo:bbSouthEast");
CREATE INDEX "mlo:GeoLocation_mlo:asBoundingBox_ID" ON
"mlo:GeoLocation_mlo:asBoundingBox" (ID);
CREATE UNIQUE INDEX "mlo:GeoLocation_mlo:asBoundingBox_ID_ID" ON
"mlo:GeoLocation_mlo:asBoundingBox" ("mlo:asBoundingBox", ID);
CREATE INDEX "mlo:GeoLocation_mlo:asGeoPoint_ID" ON
"mlo:GeoLocation_mlo:asGeoPoint" (ID);
CREATE UNIQUE INDEX "mlo:GeoLocation_mlo:asGeoPoint_ID_ID" ON
"mlo:GeoLocation_mlo:asGeoPoiNt" ("mlo:asGeoPoint", ID);
CREATE INDEX "mlo:GeoLocation_mlo:asPostalAddress_ID" ON
"mlo:GeoLocation_mlo:asPostalAddress" (ID);
CREATE UNIQUE INDEX "mlo:GeoLocation_mlo:asPostalAddress_ID_ID" ON
"mlo:GeoLocation_mlo:asPostalAddress" ("mlo:asPostalAddress", ID);
CREATE UNIQUE INDEX "mlo:GeoPoint_mlo:address_ID_ID" ON
"mlo:GeoPoint_mlo:address" (ID, "mlo:address");
CREATE UNIQUE INDEX "mlo:GeoPoint_mlo:altitude_ID_ID" ON
"mlo:GeoPoint_mlo:altitude" (ID, "mlo:altitude");
CREATE UNIQUE INDEX "mlo:GeoPoint_mlo:city_ID_ID" ON
"mlo:GeoPoint_mlo:city" (ID, "mlo:city");
CREATE UNIQUE INDEX "mlo:GeoPoint_mlo:country_ID_ID" ON
"mlo:GeoPoint_mlo:country" (ID, "mlo:country");
CREATE UNIQUE INDEX "mlo:GeoPoint_mlo:latitude_ID_ID" ON
"mlo:GeoPoint_mlo:latitude" (ID, "mlo:latitude");
CREATE UNIQUE INDEX "mlo:GeoPoint_mlo:longitude_ID_ID" ON
"mlo:GeoPoint_mlo:longitude" (ID, "mlo:longitude");
CREATE UNIQUE INDEX "mlo:GeoPoint_mlo:state_ID_ID" ON
"mlo:GeoPoint_mlo:state" (ID, "mlo:state");
CREATE UNIQUE INDEX "mlo:GeoPoint_mlo:timestamp_ID_ID" ON
"mlo:GeoPoint_mlo:timestamp" (ID, "mlo:timestamp");
CREATE UNIQUE INDEX "mlo:GeoSphere_mlo:radius_ID_ID" ON
"mlo:GeoSphere_mlo:radius" (ID, "mlo:radius");
CREATE UNIQUE INDEX "mlo:LandmarkCategory_mlo:isRemovable_ID_ID" ON
"mlo:LandmarkCategory_mlo:isRemovable" (ID, "mlo:isRemovable");
CREATE UNIQUE INDEX "mlo:Landmark_mlo:belongsToCategory_ID_ID" ON
"mlo:Landmark_mlo:belongsToCategory" (ID, "mlo:belongsToCategory");
CREATE UNIQUE INDEX "mlo:Landmark_mlo:poiLocation_ID_ID" ON
"mlo:Landmark_mlo:poiLocation" (ID, "mlo:poiLocation");
CREATE UNIQUE INDEX "mlo:LocationBoundingBox_mlo:boxEastLimit_ID_ID"
ON "mlo:LocationBoundingBox_mlo:boxEastLimit" (ID,
"mlo:boxEastLimit");
CREATE UNIQUE INDEX "mlo:LocationBoundingBox_mlo:boxNorthLimit_ID_ID"
ON "mlo:LocationBoundingBox_mlo:boxNorthLimit" (ID,
"mlo:boxNorthLimit");
CREATE UNIQUE INDEX
"mlo:LocationBoundingBox_mlo:boxSouthWestCorner_ID_ID" ON
"mlo:LocationBoundingBox_mlo:boxSouthWestCorner" (ID,
"mlo:boxSouthWestCorner");
CREATE UNIQUE INDEX
"mlo:LocationBoundingBox_mlo:boxVerticalLimit_ID_ID" ON
"mlo:LocationBoundingBox_mlo:boxVerticalLimit" (ID,
"mlo:boxVerticalLimit");
CREATE UNIQUE INDEX "mlo:Route_mlo:endTime_ID_ID" ON
"mlo:Route_mlo:endTime" (ID, "mlo:endTime");
CREATE UNIQUE INDEX "mlo:Route_mlo:routeDetails_ID_ID" ON
"mlo:Route_mlo:routeDetails" (ID, "mlo:routeDetails");
CREATE UNIQUE INDEX "mlo:Route_mlo:startTime_ID_ID" ON
"mlo:Route_mlo:startTime" (ID, "mlo:startTime");
CREATE UNIQUE INDEX "mto:Transfer_mto:transferList_ID_ID" ON
"mto:Transfer_mto:transferList" (ID, "mto:transferList");
CREATE UNIQUE INDEX "mto:Transfer_mto:transferPrivacyLevel_ID_ID" ON
"mto:Transfer_mto:transferPrivacyLevel" (ID,
"mto:transferPrivacyLevel");
CREATE UNIQUE INDEX "mto:UploadTransfer_mto:transferCategory_ID_ID" ON
"mto:UploadTransfer_mto:transferCategory" (ID,
"mto:transferCategory");
CREATE UNIQUE INDEX "nao:Tag_tracker:isDefaultTag_ID_ID" ON
"nao:Tag_tracker:isDefaultTag" (ID, "tracker:isDefaultTag");
CREATE UNIQUE INDEX "nao:Tag_tracker:tagRelatedTo_ID_ID" ON
"nao:Tag_tracker:tagRelatedTo" (ID, "tracker:tagRelatedTo");
CREATE UNIQUE INDEX "ncal:Alarm_ncal:action_ID_ID" ON
"ncal:Alarm_ncal:action" (ID, "ncal:action");
CREATE UNIQUE INDEX "ncal:BydayRulePart_ncal:bydayModifier_ID_ID" ON
"ncal:BydayRulePart_ncal:bydayModifier" (ID, "ncal:bydayModifier");
CREATE UNIQUE INDEX "ncal:BydayRulePart_ncal:bydayWeekday_ID_ID" ON
"ncal:BydayRulePart_ncal:bydayWeekday" (ID, "ncal:bydayWeekday");
CREATE UNIQUE INDEX "ncal:Calendar_ncal:component_ID_ID" ON
"ncal:Calendar_ncal:component" (ID, "ncal:component");
CREATE UNIQUE INDEX "ncal:Freebusy_ncal:freebusy_ID_ID" ON
"ncal:Freebusy_ncal:freebusy" (ID, "ncal:freebusy");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:byday_ID_ID" ON
"ncal:RecurrenceRule_ncal:byday" (ID, "ncal:byday");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:byhour_ID_ID" ON
"ncal:RecurrenceRule_ncal:byhour" (ID, "ncal:byhour");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:byminute_ID_ID" ON
"ncal:RecurrenceRule_ncal:byminute" (ID, "ncal:byminute");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:bymonth_ID_ID" ON
"ncal:RecurrenceRule_ncal:bymonth" (ID, "ncal:bymonth");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:bymonthday_ID_ID" ON
"ncal:RecurrenceRule_ncal:bymonthday" (ID, "ncal:bymonthday");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:bysecond_ID_ID" ON
"ncal:RecurrenceRule_ncal:bysecond" (ID, "ncal:bysecond");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:bysetpos_ID_ID" ON
"ncal:RecurrenceRule_ncal:bysetpos" (ID, "ncal:bysetpos");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:byweekno_ID_ID" ON
"ncal:RecurrenceRule_ncal:byweekno" (ID, "ncal:byweekno");
CREATE UNIQUE INDEX "ncal:RecurrenceRule_ncal:byyearday_ID_ID" ON
"ncal:RecurrenceRule_ncal:byyearday" (ID, "ncal:byyearday");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:attach_ID_ID" ON
"ncal:UnionParentClass_ncal:attach" (ID, "ncal:attach");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:attendee_ID_ID" ON
"ncal:UnionParentClass_ncal:attendee" (ID, "ncal:attendee");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:categories_ID_ID" ON
"ncal:UnionParentClass_ncal:categories" (ID, "ncal:categories");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:exdate_ID_ID" ON
"ncal:UnionParentClass_ncal:exdate" (ID, "ncal:exdate");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:exrule_ID_ID" ON
"ncal:UnionParentClass_ncal:exrule" (ID, "ncal:exrule");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:hasAlarm_ID_ID" ON
"ncal:UnionParentClass_ncal:hasAlarm" (ID, "ncal:hasAlarm");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:ncalRelation_ID_ID" ON
"ncal:UnionParentClass_ncal:ncalRelation" (ID, "ncal:ncalRelation");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:rdate_ID_ID" ON
"ncal:UnionParentClass_ncal:rdate" (ID, "ncal:rdate");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:relatedToChild_ID_ID"
ON "ncal:UnionParentClass_ncal:relatedToChild" (ID,
"ncal:relatedToChild");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:relatedToParent_ID_ID"
ON "ncal:UnionParentClass_ncal:relatedToParent" (ID,
"ncal:relatedToParent");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:resources_ID_ID" ON
"ncal:UnionParentClass_ncal:resources" (ID, "ncal:resources");
CREATE UNIQUE INDEX "ncal:UnionParentClass_ncal:rrule_ID_ID" ON
"ncal:UnionParentClass_ncal:rrule" (ID, "ncal:rrule");
CREATE UNIQUE INDEX "nco:Affiliation_nco:title_ID_ID" ON
"nco:Affiliation_nco:title" (ID, "nco:title");
CREATE UNIQUE INDEX "nco:ContactList_nco:containsContact_ID_ID" ON
"nco:ContactList_nco:containsContact" (ID, "nco:containsContact");
CREATE UNIQUE INDEX "nco:Contact_ncal:anniversary_ID_ID" ON
"nco:Contact_ncal:anniversary" (ID, "ncal:anniversary");
CREATE UNIQUE INDEX "nco:Contact_ncal:birthday_ID_ID" ON
"nco:Contact_ncal:birthday" (ID, "ncal:birthday");
CREATE UNIQUE INDEX "nco:Contact_nco:belongsToGroup_ID_ID" ON
"nco:Contact_nco:belongsToGroup" (ID, "nco:belongsToGroup");
CREATE UNIQUE INDEX "nco:Contact_nco:note_ID_ID" ON
"nco:Contact_nco:note" (ID, "nco:note");
CREATE UNIQUE INDEX "nco:Contact_scal:anniversary_ID_ID" ON
"nco:Contact_scal:anniversary" (ID, "scal:anniversary");
CREATE UNIQUE INDEX "nco:Contact_scal:birthday_ID_ID" ON
"nco:Contact_scal:birthday" (ID, "scal:birthday");
CREATE UNIQUE INDEX "nco:IMAccount_nco:hasIMContact_ID_ID" ON
"nco:IMAccount_nco:hasIMContact" (ID, "nco:hasIMContact");
CREATE UNIQUE INDEX "nco:IMAddress_nco:imCapability_ID_ID" ON
"nco:IMAddress_nco:imCapability" (ID, "nco:imCapability");
CREATE UNIQUE INDEX "nco:PersonContact_nco:hasAffiliation_ID_ID" ON
"nco:PersonContact_nco:hasAffiliation" (ID, "nco:hasAffiliation");
CREATE INDEX "nco:PersonContact_nco:nameFamily" ON "nco:PersonContact"
("nco:nameFamily");
CREATE INDEX "nco:PhoneNumber_nco:phoneNumber" ON "nco:PhoneNumber"
("nco:phoneNumber");
CREATE UNIQUE INDEX "nco:Role_nco:blogUrl_ID_ID" ON
"nco:Role_nco:blogUrl" (ID, "nco:blogUrl");
CREATE UNIQUE INDEX "nco:Role_nco:foafUrl_ID_ID" ON
"nco:Role_nco:foafUrl" (ID, "nco:foafUrl");
CREATE UNIQUE INDEX "nco:Role_nco:hasContactMedium_ID_ID" ON
"nco:Role_nco:hasContactMedium" (ID, "nco:hasContactMedium");
CREATE INDEX "nco:Role_nco:hasEmailAddress_ID" ON
"nco:Role_nco:hasEmailAddress" (ID);
CREATE UNIQUE INDEX "nco:Role_nco:hasEmailAddress_ID_ID" ON
"nco:Role_nco:hasEmailAddress" ("nco:hasEmailAddress", ID);
CREATE UNIQUE INDEX "nco:Role_nco:hasIMAddress_ID_ID" ON
"nco:Role_nco:hasIMAddress" (ID, "nco:hasIMAddress");
CREATE UNIQUE INDEX "nco:Role_nco:hasPhoneNumber_ID_ID" ON
"nco:Role_nco:hasPhoneNumber" (ID, "nco:hasPhoneNumber");
CREATE INDEX "nco:Role_nco:hasPostalAddress_ID" ON
"nco:Role_nco:hasPostalAddress" (ID);
CREATE UNIQUE INDEX "nco:Role_nco:hasPostalAddress_ID_ID" ON
"nco:Role_nco:hasPostalAddress" ("nco:hasPostalAddress", ID);
CREATE UNIQUE INDEX "nco:Role_nco:url_ID_ID" ON "nco:Role_nco:url"
(ID, "nco:url");
CREATE UNIQUE INDEX "nco:Role_nco:websiteUrl_ID_ID" ON
"nco:Role_nco:websiteUrl" (ID, "nco:websiteUrl");
CREATE UNIQUE INDEX
"nfo:BookmarkFolder_nfo:containsBookmarkFolder_ID_ID" ON
"nfo:BookmarkFolder_nfo:containsBookmarkFolder" (ID,
"nfo:containsBookmarkFolder");
CREATE UNIQUE INDEX "nfo:BookmarkFolder_nfo:containsBookmark_ID_ID" ON
"nfo:BookmarkFolder_nfo:containsBookmark" (ID,
"nfo:containsBookmark");
CREATE INDEX "nfo:FileDataObject_nfo:fileLastModified" ON
"nfo:FileDataObject" ("nfo:fileLastModified");
CREATE UNIQUE INDEX "nfo:Image_nfo:depicts_ID_ID" ON
"nfo:Image_nfo:depicts" (ID, "nfo:depicts");
CREATE UNIQUE INDEX "nfo:Image_nfo:hasRegionOfInterest_ID_ID" ON
"nfo:Image_nfo:hasRegionOfInterest" (ID, "nfo:hasRegionOfInterest");
CREATE UNIQUE INDEX "nfo:MediaList_nfo:hasMediaFileListEntry_ID_ID" ON
"nfo:MediaList_nfo:hasMediaFileListEntry" (ID,
"nfo:hasMediaFileListEntry");
CREATE UNIQUE INDEX "nfo:MediaList_nfo:mediaListEntry_ID_ID" ON
"nfo:MediaList_nfo:mediaListEntry" (ID, "nfo:mediaListEntry");
CREATE UNIQUE INDEX "nfo:Media_mtp:hidden_ID_ID" ON
"nfo:Media_mtp:hidden" (ID, "mtp:hidden");
CREATE UNIQUE INDEX "nfo:Media_nmm:alternativeMedia_ID_ID" ON
"nfo:Media_nmm:alternativeMedia" (ID, "nmm:alternativeMedia");
CREATE INDEX "nfo:Visual_nie:contentCreated" ON "nfo:Visual"
("nie:contentCreated");
CREATE UNIQUE INDEX "nid3:ID3Audio_nid3:leadArtist_ID_ID" ON
"nid3:ID3Audio_nid3:leadArtist" (ID, "nid3:leadArtist");
CREATE UNIQUE INDEX "nie:DataObject_nie:dataSource_ID_ID" ON
"nie:DataObject_nie:dataSource" (ID, "nie:dataSource");
CREATE UNIQUE INDEX "nie:DataObject_nie:isPartOf_ID_ID" ON
"nie:DataObject_nie:isPartOf" (ID, "nie:isPartOf");
CREATE INDEX "nie:DataObject_nie:url" ON "nie:DataObject" ("nie:url");
CREATE INDEX "nie:InformationElement_mlo:location_ID" ON
"nie:InformationElement_mlo:location" (ID);
CREATE UNIQUE INDEX "nie:InformationElement_mlo:location_ID_ID" ON
"nie:InformationElement_mlo:location" ("mlo:location", ID);
CREATE UNIQUE INDEX "nie:InformationElement_nao:hasProperty_ID_ID" ON
"nie:InformationElement_nao:hasProperty" (ID, "nao:hasProperty");
CREATE UNIQUE INDEX "nie:InformationElement_nco:contributor_ID_ID" ON
"nie:InformationElement_nco:contributor" (ID, "nco:contributor");
CREATE UNIQUE INDEX "nie:InformationElement_nco:creator_ID_ID" ON
"nie:InformationElement_nco:creator" (ID, "nco:creator");
CREATE UNIQUE INDEX "nie:InformationElement_nie:hasLogicalPart_ID_ID"
ON "nie:InformationElement_nie:hasLogicalPart" (ID,
"nie:hasLogicalPart");
CREATE UNIQUE INDEX "nie:InformationElement_nie:hasPart_ID_ID" ON
"nie:InformationElement_nie:hasPart" (ID, "nie:hasPart");
CREATE UNIQUE INDEX
"nie:InformationElement_nie:informationElementDate_ID_ID" ON
"nie:InformationElement_nie:informationElementDate" (ID,
"nie:informationElementDate");
CREATE UNIQUE INDEX "nie:InformationElement_nie:isLogicalPartOf_ID_ID"
ON "nie:InformationElement_nie:isLogicalPartOf" (ID,
"nie:isLogicalPartOf");
CREATE UNIQUE INDEX "nie:InformationElement_nie:keyword_ID_ID" ON
"nie:InformationElement_nie:keyword" (ID, "nie:keyword");
CREATE UNIQUE INDEX "nie:InformationElement_nie:relatedTo_ID_ID" ON
"nie:InformationElement_nie:relatedTo" (ID, "nie:relatedTo");
CREATE INDEX "nie:InformationElement_slo:location" ON
"nie:InformationElement" ("slo:location");
CREATE INDEX "nmm:Artist_nmm:artistName" ON "nmm:Artist" ("nmm:artistName");
CREATE INDEX "nmm:MusicAlbum_nie:title" ON "nmm:MusicAlbum" ("nie:title");
CREATE UNIQUE INDEX "nmm:MusicAlbum_nmm:albumArtist_ID_ID" ON
"nmm:MusicAlbum_nmm:albumArtist" (ID, "nmm:albumArtist");
CREATE INDEX "nmm:MusicPiece_nie:title" ON "nmm:MusicPiece" ("nie:title");
CREATE UNIQUE INDEX "nmm:MusicPiece_nmm:lyrics_ID_ID" ON
"nmm:MusicPiece_nmm:lyrics" (ID, "nmm:lyrics");
CREATE INDEX "nmm:MusicPiece_nmm:musicAlbum" ON "nmm:MusicPiece"
("nmm:musicAlbum");
CREATE INDEX "nmm:MusicPiece_nmm:performer" ON "nmm:MusicPiece"
("nmm:performer");
CREATE UNIQUE INDEX "nmm:RadioStation_nmm:carrier_ID_ID" ON
"nmm:RadioStation_nmm:carrier" (ID, "nmm:carrier");
CREATE UNIQUE INDEX "nmm:Video_mtp:scantype_ID_ID" ON
"nmm:Video_mtp:scantype" (ID, "mtp:scantype");
CREATE UNIQUE INDEX "nmm:Video_nmm:director_ID_ID" ON
"nmm:Video_nmm:director" (ID, "nmm:director");
CREATE UNIQUE INDEX "nmm:Video_nmm:leadActor_ID_ID" ON
"nmm:Video_nmm:leadActor" (ID, "nmm:leadActor");
CREATE UNIQUE INDEX "nmm:Video_nmm:subtitle_ID_ID" ON
"nmm:Video_nmm:subtitle" (ID, "nmm:subtitle");
CREATE INDEX "nmo:Call_nmo:sentDate" ON "nmo:Call" ("nmo:sen|ièî¿¨ütDate");
CREATE INDEX "nmo:CommunicationChannel_nmo:hasParticipant_ID" ON
"nmo:CommunicationChannel_nmo:hasParticipant" (ID);
CREATE UNIQUE INDEX
"nmo:CommunicationChannel_nmo:hasParticipant_ID_ID" ON
"nmo:CommunicationChannel_nmo:hasParticipant" ("nmo:hasParticipant",
ID);
CREATE INDEX "nmo:CommunicationChannel_nmo:lastMessageDate" ON
"nmo:CommunicationChannel" ("nmo:lastMessageDate");
CREATE UNIQUE INDEX "nmo:Email_nmo:contentMimeType_ID_ID" ON
"nmo:Email_nmo:contentMimeType" (ID, "nmo:contentMimeType");
CREATE UNIQUE INDEX "nmo:Message_nmo:bcc_ID_ID" ON
"nmo:Message_nmo:bcc" (ID, "nmo:bcc");
CREATE UNIQUE INDEX "nmo:Message_nmo:cc_ID_ID" ON "nmo:Message_nmo:cc"
(ID, "nmo:cc");
CREATE INDEX "nmo:Message_nmo:communicationChannel" ON "nmo:Message"
("nmo:communicationChannel", "nmo:receivedDate");
CREATE INDEX "nmo:Message_nmo:conversation" ON "nmo:Message"
("nmo:conversation");
CREATE INDEX "nmo:Message_nmo:from" ON "nmo:Message" ("nmo:from");
CREATE UNIQUE INDEX "nmo:Message_nmo:hasAttachment_ID_ID" ON
"nmo:Message_nmo:hasAttachment" (ID, "nmo:hasAttachment");
CREATE UNIQUE INDEX "nmo:Message_nmo:inReplyTo_ID_ID" ON
"nmo:Message_nmo:inReplyTo" (ID, "nmo:inReplyTo");
CREATE UNIQUE INDEX "nmo:Mess¾ge_nmo:messageHeader_ID_ID" ON
"nmo:Message_nmo:messageHeader" (ID, "nmo:messageHeader");
CREATE UNIQUE INDEX "nmo:Message_nmo:recipient_ID_ID" ON
"nmo:Message_nmo:recipient" (ID, "nmo:recipient");
CREATE UNIQUE INDEX "nmo:Message_nmo:references_ID_ID" ON
"nmo:Message_nmo:references" (ID, "nmo:references");
CREATE INDEX "nmo:Message_nmo:sender" ON "nmo:Message" ("nmo:sender");
CREATE INDEX "nmo:Message_nmo:sentDate" ON "nmo:Message" ("nmo:sentDate");
CREATE INDEX "nmo:Message_nmo:to_ID" ON "nmo:Message_nmo:to" (ID);
CREATE UNIQUE INDEX "nmo:Message_nmo:to_ID_ID" ON "nmo:Message_nmo:to"
("nmo:to", ID);
CREATE UNIQUE INDEX "nmo:MimePart_nmo:mimeHeader_ID_ID" ON
"nmo:MimePart_nmo:mimeHeader" (ID, "nmo:mimeHeader");
CREATE UNIQUE INDEX "nmo:Multipart_nmo:partBoundary_ID_ID" ON
"nmo:Multipart_nmo:partBoundary" (ID, "nmo:partBoundary");
CREATE UNIQUE INDEX
"nmo:PhoneMessageFolder_nmo:containsPhoneMessageFolder_ID_ID" ON
"nmo:PhoneMessageFolder_nmo:containsPhoneMessageFolder" (ID,
"nmo:containsPhoneMessageFolder");
CREATE UNIQUE INDEX
"nmo:PhoneMessageFolder_nmo:containsPhoneMessage_ID_ID" ON
"nmo:PhoneMessageFolder_nmo:containsPhoneMessage" (ID,
"nmo:containsPhoneMessage");
CREATE UNIQUE INDEX "nmo:PhoneMessage_nmo:toVCard_ID_ID" ON
"nmo:PhoneMessage_nmo:toVCard" (ID, "nmo:toVCard");
CREATE UNIQUE INDEX "rdf:Property_rdfs:subPropertyOf_ID_ID" ON
"rdf:Property_rdfs:subPropertyOf" (ID, "rdfs:subPropertyOf");
CREATE UNIQUE INDEX "rdfs:Class_rdfs:subClassOf_ID_ID" ON
"rdfs:Class_rdfs:subClassOf" (ID, "rdfs:subClassOf");
CREATE UNIQUE INDEX "rdfs:Class_tracker:domainIndex_ID_ID" ON
"rdfs:Class_tracker:domainIndex" (ID, "tracker:domainIndex");
CREATE UNIQUE INDEX "rdfs:Resource_dc:contributor_ID_ID" ON
"rdfs:Resource_dc:contributor" (ID, "dc:contributor");
CREATE UNIQUE INDEX "rdfs:Resource_dc:date_ID_ID" ON
"rdfs:Resource_dc:date" (ID, "dc:date");
CREATE UNIQUE INDEX "rdfs:Resource_dc:relation_ID_ID" ON
"rdfs:Resource_dc:relation" (ID, "dc:relation");
CREATE UNIQUE INDEX "rdfs:Resource_dc:source_ID_ID" ON
"rdfs:Resource_dc:source" (ID, "dc:source");
CREATE UNIQUE INDEX "rdfs:Resource_nao:deprecated_ID_ID" ON
"rdfs:Resource_nao:deprecated" (ID, "nao:deprecated");
CREATE INDEX "rdfs:Resource_nao:hasTag_ID" ON "rdfs:Resource_nao:hasTag" (ID);
CREATE UNIQUE INDEX "rdfs:Resource_nao:hasTag_ID_ID" ON
"rdfs:Resource_nao:hasTag" ("nao:hasTag", ID);
CREATE UNIQUE INDEX "rdfs:Resource_nao:isRelated_ID_ID" ON
"rdfs:Resource_nao:isRelated" (ID, "nao:isRelated");
CREATE UNIQUE INDEX "rdfs:Resource_rdf:type_ID_ID" ON
"rdfs:Resource_rdf:type" (ID, "rdf:type");
CREATE INDEX "rdfs:Resource_tracker:added" ON "rdfs:Resource" ("tracker:added");
CREATE UNIQUE INDEX "scal:Attendee_scal:delegated-from_ID_ID" ON
"scal:Attendee_scal:delegated-from" (ID, "scal:delegated-from");
CREATE UNIQUE INDEX "scal:Attendee_scal:delegated-to_ID_ID" ON
"scal:Attendee_scal:delegated-to" (ID, "scal:delegated-to");
CREATE UNIQUE INDEX "scal:Attendee_scal:member_ID_ID" ON
"scal:Attendee_scal:member" (ID, "scal:member");
CREATE UNIQUE INDEX "scal:Attendee_scal:sent-by_ID_ID" ON
"scal:Attendee_scal:sent-by" (ID, "scal:sent-by");
CREATE UNIQUE INDEX "scal:CalendarAlarm_scal:alarmAttendee_ID_ID" ON
"scal:CalendarAlarm_scal:alarmAttendee" (ID, "scal:alarmAttendee");
CREATE UNIQUE INDEX "scal:CalendarItem_scal:access_ID_ID" ON
"scal:CalendarItem_scal:access" (ID, "scal:access");
CREATE UNIQUE INDEX "scal:CalendarItem_scal:attachment_ID_ID" ON
"scal:CalendarItem_scal:attachmen[" (ID, "scal:attachment");
CREATE UNIQUE INDEX "scal:CalendarItem_scal:attendee_ID_ID" ON
"scal:CalendarItem_scal:attendee" (I NOCASE, ',è  ROM (SELECT
"nie:InformationElement_nao:hasProperty13"."nao