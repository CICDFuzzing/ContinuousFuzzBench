   CREATE TABLE t1(x UNIQUE);
    INSERT INTO t1 VALUES(1); ANALYZE;    ANALYZE; ;
    ANALYZE;  ANALYZE;
UPsqlstat ANALYZE;
UP'00N0,0YZE;
   t1 VS(
  CREATE TABLE bb(SELER  €doubÿb6  '''''''''''''''''''#2 May 21
#
# The ght to this source code.  In plnd forgiveness for yice, here is a wlessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself L DEFAULT CURRENT_TIMESTAMP,i_t~pEGER, "nmm:setNumber" INTEGER,
"nmm:setNumbe INTEGn (id INTEGER NOT NUL? P# 2009 March 28
#
# The author disclaims copyright to this source code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good andMMMMMMMMMMMMMM not evil.
#    May you find forgivenessllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#*****************#******************************************** set followed by the
# and*the number of fullan steps.
#
proc count_steps {sql} {
  set r [db eval $ppend r scan*********
#
# Ticket #3757:  The coveness for yice, here is a wlessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself L DEFAUL 2009/03/29 00:13:04 drh Exp $

set testdir [file dirname $argv0]
source $tesdir/tester.tcl

# Evaluate SQL.  Return the result set folloued by the
# and*the number of fullan steps.
#
proc count_steps {sql} {
  set r [db eval $ppend r scan [db status step] sort€[db status sort]
}

# Construct t„bles
#
do_test tkt3757-1.1 {
  db eval {
     CREATx INTEGER, y INTEGER, z TEXT);
     CREATE INDEX tBi1 ON t1(y,z);
     INSERT0INTO t1 VAÿb,ÿbR  €douLUES(1,2,'thiee');
     CREATE TABLE t2(a INTEGER, b TEXT)estdir/tester.tcl

# Evaluate SQL.  ReturnvL', 'v ', 'L''L_K', '', 'v ', 'LOQvL', 'v ');S the result set foll;
     INSERT INTO t2 VALUES(2,wo');
     ANALYZE;
     SELECT 8 FROM sqlite_stat1 ORDER BY 1, 2;
  {t1 t1i1 {1 1 1} t2 {} 1}

#statcs in order to make the optir then that:   (1)  Table T1 has about 250