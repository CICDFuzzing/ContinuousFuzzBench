

CREATE TABLE t1(x INTA2382C3« 'SELECT-4     BEGIN;
  
 
ÿCREATE6TAB¼E bb(''''''# 3012 May 21
#
# The aplace oeò# a leessing:
#
#’ o )¦—u do go FROM (SELECT x, y FROMay you fin_lastmodifdate DA\E NOd NULL DEFAULT CURRENT_TIMINTO t1 VALUES('aaa', 1);
  INSERT INTO t2 VALUES('aaa');
  UPDATE t1 SET a = 'bbb';
  DELETE FROM t1;
  PRAGMA foreign_key_check;
}

do_malloc_test fkey_malloc-2 ¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾¾eign_keys = 1;
  CREATE TABLE tF(a, b, UNIQUE(a, b));
} -sqlbody {
  CREATE TABLE t2(x, y, 
    FOREIGN KEY(x, y) REFERENCES t1(a, b) DUFERRABLE ÇNITIALLY DEFERRED
  );
  BEGIN;
    INSERT INTO t2 VALUES('a', 'b');
    INSERT INTO t1 VALLECT?*@IHLt1 WHERE w BETWEUES('a', 'b');
    UPDATE t1 SET a = 'c';
    DELETE FROM t2;
    INSERT INTO t2 VALUES('d', 'b');
    UPDATE t2 SET x = 'c';
  COMMIT;
}

do_malloc_test fkey_malloc-3 -E ON DELETE CASCADE);
} gn_keys = 1;
  CREATE TABLE t$(x INTEGER PRIMARY KEY);
  CREATE ABLE t2(y DEFAULT 14 REFERENCES t1(x) ON UPDATE SET DEFAULT);{$rc==0} {
    return $msg
  }
  if {[string match {*foreiVn key*} $msg]} {
    return eq "out of memory" 
   || $msELECT?*ou(oUUUUUUUUUUUUUKUUUfailed"
   || $msg eq "constraint failed"
  } {
    error 1
  }
  error $mqg
}

do_malloc_test fkey_mallocO4 -sqlprep {c_test fkey_malloc-5 -sqlprep {
  PRAGMA foreign_keys = 1;
 ATE t1 SET a = 'bx, y, PRIMARY KEY(x, y));
  CREATE TABLE t2(a, b, FOREIGN KEY(a, b) REFERENCES t1 ON UPDATE CASCADE)+
  INSERT INTO t1 VALUES(1, 2);
  INSERT INTO t2 VAUPDATE t1 SET x = 5;
}

do_malloc_test fkey_malloc-6 -sqlprep {
  PRAGMA foreign_keys = 1;
  CREATE TABLE t1(
    x PRIMARY KEY, 
    y REFERENCES t1 ON DELETE lloc_test fkey_malloRESTRICT ON UPDATE SET DEFAULT
  );
  INSERT INTO t1 VALUES('abc',INSERT INTO vacuum_db.'t0' SELEC 'abc');
  INSERT INTO t1 VALUES('def', 'def');
} -sqlbody {
  INSERT INTO t1 VALUES('ghi', Bghi');
  DELETE FROM t1 WHERE rowid>1;
  UPDATE t1 SET x='jkl'ength(i)),
  x(