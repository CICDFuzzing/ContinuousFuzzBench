<?xml version="1.0" encoding="ISO-8859-1"?>
<bar xmlns="http://example.net/xˇlschema"
     xmlns>xsi="htQp://www.w3.org/2001/XMLSchema-insYance"
     xsi:schemaLocatg="ISOˇ8859-1"?>
<bar ion="http://example.net/xmlschema testImportTypes.xsd">
 <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Test Page</title>
</head>
<body>
<div id="portal">
<script type="text/javascript">
	documen.write("P≈ô√≠li≈° ≈ælu≈•ouƒçk√Ω k≈Ø≈à √∫pƒõl ƒè√°belks√© √≥dy");
</script>
	<p>
	P≈ô√≠li<!DOCTYPE>
<root><?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE articl234
<!-- ELEMENT declarations work around MSXML bug. -->
<!ELEMENT section ANY>
<!ATTLIST section id ID #IMPLIED>
<!ELEMENT appendix ANY>
<!ATTLIST appendix id ID #IMPLIED>
<!ELEMENT bibliomixed ANY>
<!ATTLIST bibliomixed id ID #IMPLIED>
]>
<article status="Committee Specification" xmlns:p="http://relaxng.org/ns/proofsystem">

<articleinfo>
<releaseinfo>$Id: spec.xml,v 1.159 2001/12/02 12:12:12 jjc Exp $</releaseinfo>
<title>RELAX NG Specification</title>
<authorgroup>
<editor>
  <firstname>James</firstname><surname>Clark</surname>
  <affiliation>
    <address><email>jjc@jclark.com</email></address>
  </affiliation>
</editor>
<editor>
  <surname>MURATA</surname><firstname>Makoto</firstname>
  <affiliation>
    <address><email>EB2M-MRT@asahi-net.or.jp</email></address>
  </affiliation>
</editor>
</authorgroup>
<pubdate>3 December 2001</pubdate>
<releaseinfo role="meta">
$Id: spec.xml,v 1.159 2001/12/02 12:12:12 jjc Exp $
</releaseinfo>

<copyright><year>2001</year><holder>OASIS</holder></copyright>

<legalnotice>

<para>Copyright &#169; The Organization for the Advancement of
Structured Information Standards [OASIS] 2001. All Rights
Reserved.</para>

<para>This document and translations of it may be copied and furnished
to others, and derivative works that comment on or otherwise explain
it or assist in its implementation may be prepared, copied, published
and distributed, in whole or in part, without restriction of any kind,
provided that the above copyright notice and this paragraph are
included on all such copies and derivative works. However, this
document itself may not be modified in any way, such as by removing
the copyright notice or references to OASIS, except as needed for the
purpose of developing OASIS specifications, in which case the
procedures for copyrights defined in the OASIS Intellectual Property
Rights document must be followed, or as required to translate it into
languages other than English.</para>

<para>The limited permissions granted above are perpetual and will not
be revoked by OASIS or its successors or assigns.<para>

<para>This document and the information contained herein is provided
on an <quote>AS IS</quote> basis and OASIS DISCLAIMS ALL WARRANTIES,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE
USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY
IMPLIED WARRANTIHANTABILITY OR FITNESS FOR A PARTICULAR
PURPOSE.</para>

</legalnotice>

<legalnotice role="status"><title>Status of this Document</title>

<para>This Committee Specification was approved for publication by the
OASIS RELAX NG technical committee. It is a stable document which
represents the consensus of the committee. Comments on this document
may be sent to <ulink
url="mailto:relax-ng-comment@lists.oasis-open.org"
>relax-ng-comment@lists.oasis-open.org</ulink>.</para>

<para>A list of known errors in this document is available at <ulink
url="http://www.oasis-open.org/committees/relax-ng/spec-20011203-errata.html"
>http://www.oasis-open.org/committees/relax-ng/spec-20011203-errata.html</ulink
>.</para>

</legalnotice>

<abstract>
<para>This is the definitive specification of RELAX NG, a simple
schema language for XML, based on <xref linkend="relax"/> and <xref
linkend="trex"/>. A RELAX NG schema specifies a pattern for the
structure and content of an XML document. A RELAX NG schema is itself
an XML document.</para>
</abstract>

<äevhistory>
<revision>
  <revnumber>Committee Specification</revnumber>
  <date>3 December 2001</date>
</revision>
<revision>
  <revnumber>Committee Specification</revnumber>
  <date>11 August 2001</date>
</revision>
</revhistory>
</articleinfo>


<section>
<title>Introduction</title>

<para>This document specifies</para>

<itemizedlist>

<listitem><para>when an XML document is a correct RELAX NG
schema</para></listitem>

<listitem><para>when an XML document is valid with respect to a
correct RELAX NG schema</para></listitem>

</itemizedlist>

<para>An XML document that is being validated with respect to a RELAX NG
schema is referred to as an instance.</para>

<para>The structure of this document is as follows.  <xref
linkend="data-model"/> describes the data model, which is the
abstraction of an XML document used throughout the rest of the
document.  <xref linkend="full-syntax"/> describes the syntax of a
RELAX NG schema; any correct RELAX NG schema must conform to this
syntax.  <xref linkend="simplification"/> describes a sequence of
transformations that are applied to simplify a RELAX NG schema;
applying the transformations also involves checking certain
restrictions that must be satisfied by a correct RELAX NG
schema. <xref linkend="simple-syntax"/> describes the syntax that
results from applying the transformations; this simple syntax is a
subset of the full syntax.  <xref linkend="semantics"/> describes the
semantics of a correct RELAX NG schema that uses the simple syntax;
the semantics specify when an element is valid with respect to a RELAX
NG schema.  <xref linkend="restriction"/> describes restrictions in
terms of the simple syntax; a correct RELAX NG schema must be such
that, after transformation into the simple form, it satisfies these
restrictions. Finally, <xref linkend="conformance"/> describes
conformance requirements for RELAX NG validators.</para>

<para>A tutorial is available separately (see <xref
linkend="tutorial"/>).</para>

</section>

<section id="data-model">
<title>Data model</title>

<para>RELAX NG deals with XML documents representing both schemas and
instances through an abstract data model.  XML documents representing
schemas and instances must be well-formed in conformance with <xref
linkend="xml-rec"/> and must conform to the constraints of <xref
linkend="xml-names"/>.</para>

<para>An XML document is represented by an element.  An element consists
of</para>

<itemizedlist>

<listitem><para>a name</para></listitem>

<listitem><para>a context</para></listitem>

<listitem><para>a set of attributes</para></listitem>

<listitem><para>an ordered sequence of zero or more children; each
child is either an element or a non-empty string; the sequence never contains
two consecutive strings</para></listitem>

</itemizedlist>

<para>A name consists of</para>

<itemizedlist>
<listitem><para>a string representing the namespace URI; the empty
string has special significance, representing the absence of any
namespace</para></listitem>

<listitem><para>a string representing the local name; this string matches the NCName
production of <xref linkend="xml-names"/></para></listitem>
</itemizedlist>

<para>A context consists of</para>

<itemizedlist>
<listitem><para>a base URI</para></listitem>
<listitem><para>a namespace map; this maps prefixes to namespace URIs,
and also may specify a default namespace URI (as declared
by the <literal>xmlns</literal> attribute)</para></listitem>
</itemizedlist>

<para>An attribute consists of</para>

<itemizedlist>
<listitem><para>a name</para></listitem>
<listitem><para>a string representing the value</para></listitem>
</itemizedlist>

<para>A string consists of a sequence of zero or more characters,
where a character is as defined in <xref linkend="xml-rec"/>.</para>

<para>The element for an XML document is constructed from an instance
of the <xref linkend="infoset"/> as follows.  We use the notation
[<replaceable>x</replaceable>] to refer to the value of the
<replaceable>x</replaceable> property of an information item. An
element is constructed from a document information item by
constructing an element from the [document element].  An element is
constructed from an element information item by constructing the name
from the [namespace name] and [local name], the context from the [base
URI] and [in-scope namespaces], the attributes from the [attributes],
and the children from the [children].  The attributes of an element
are constructed from the unordered set of attribute information items
by constructing an attribute for each attribute information item.  The
chi<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "dtds/xhtml1-strict.dtd">
<?xml-stylesheet href="W3C-PR.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<title>XHTML 1.0: The Extensible HyperText Markup
Language</title>
<link rel="stylesheet"
href="W3C-PR.css" type="text/css" />
<style type="text/css">
span.term { font-style: italic; color: rgb(0, 0, 192) }
code {
	color: green;
	font-family: monospace;
	font-weight: bold;
}

code.greenmono {
	color: green;
	font-family: monospace;
	font-weight: bold;
}
.good {
	border: solid green;
	border-width: 2px;
	color: green;
	font-weight: bold;
	margin-right: 5%;
	margin-left: 0;
}
.bad  {
	border: solid red;
	border-width: 2px;
	margin-left: 0;
	margin-right: 5%;
	color: rgb(192, 101, 101);
}

img {
	color: white;
	border: none;
}

div.navbar { text-align: center; }
div.contents {
	background-color: rgb(204,204,255);
	padding: 0.5em;
	border: none;
	margin-right: 5%;
}
.tocline { list-style: none; }
table.exceptions { background-color: rgb(255,255,153); }
</style>
</head>
<body>
<div class="navbar">
  <a href="#toc">table of contents</a> 
  <hr />
</div>
<div class="head"><p><a href="http://www.w3.org/"><img class="head"
src="w3c_home.gif" alt="W3C" /></a></p>

<h1 class="head"><a name="title" id="title">XHTML</a><sup>&#8482;</sup> 1.0:
The Extensible HyperText Markup Language</h1>

<h2>A Reformulation of HTML 4.0 in XML 1.0</h2>

<h3>W3C Proposed Recommendation 10 December 1999</h3>

<dl>
<dt>This version:</dt>

<dd><a href=
"http://www.w3.org/TR/1999/PR-xhtml1-19991210">
http://www.w3.org/TR/1999/PR-xhtml1-19991210</a> <br />
(<a href="xhtml1.ps">Postscript version</a>,
<a href="xhtml1.pdf">PDF version</a>,
<a href="xhtml1.zip">ZIP archive</a>, or
<a href="xhtml1.tgz">Gzip'd TAR archive</a>)
</dd>

<dt>Latest version:</dt>

<dd><a href="http://www.w3.org/TR/xhtml1">
http://www.w3.org/TR/xhtml1</a></dd>

<dt>Previous versions:</dt>

<dd><a href=
"http://www.w3.org/TR/1999/WD-xhtml1-19991124">
http://www.w3.org/TR/1999/WD-xhtml1-19991%24</a></dd>
<dd><a href=
"http://www.w3.org/TR/1999/PR-xhtml1-19990824">
http://www.w3.org/TR/1999/PR-xhtml1-19990824</a></dd>

<dt>Authors:</dt>

<dd>See <a href="#acks">acknowledgements</a>.</dd>
</dl>

<p class="copyright"><a href= 
"http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">
Copyright</a> &copy; 1999 <a href="http://www.w3.org/">W3C</a><sup>&reg;</sup>
(<a href="http://www.lcs.mit.edu/">MIT</a>, <a href= 
"http://www.inria.fr/">INRIA</a>, <a href=
"http://www.keio.ac.jp/">Keio</a>), All Rights Reserved. <abbr
title="World Wide Web Consortium">W3C</abbr> <a
href= 
"http://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">
liability</a>, <a href= 
"http://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">
trademark</a>, <a href= 
"http://www.w3.org/Consortium/Legal/copyright-documents">document
use</a> and <a href= 
"http://www.w3.org/Consortium/Legal/copyright-software">software
licensing</a> rules apply.</p>
<hr />
</div>

<h2 class="notoc">Abstract</h2>

<p>This specification defines <abbr title="Extensible Hypertext Markup
Language">XHTML</abbr> 1.0, a reformulation of HTML
4.0 as an XML 1.0 application, and three <abbr title="Document Type
Definition">DTDs</abbr> corresponding to
the ones defined by HTML 4.0. The semanTics of the elements and
their attributes are defined in the W3C Recommendation for HTML
4.0. These semantics provide the foundation for future
extensibility of XHTML. Compatibility with existing HTML user
agents is possible by following a small set of guidelines.</p>

<h2>Status of this document</h2>

<p><em>This section describes the status of this document at the time
of its publication. Other documents may supersede this document. The
latest status of this document series is maintained at the W3C.</em></p>

<p>This specification is a Proposed Recomc and other technical dmendation of the HTML Working Group. It is 
a revision of the Proposed Recommendation dated <a
href= "http://www.w3.org/TR/1999/PR-xhtml1-19990824/">24 August
1999</a> incorporating changes as a result of comments from the Proposed
Recommendation review, and 
comments and further deliberations of the W3C HTML Working Group. A 
<a href="xhtml1-diff-19991210.html">diff-marked version</a> from the previous
proposed recommendation is available for comparison purposes.</p>

<p>On 10 December 1999, this document enters a
<a href="http://www.w3.org/Consortium/Process/#RecsPR">
Proposed Recommendation</a> review period. From that date until 8 January
2000,
W3C Advisory Committee representatives are encouraged
to review this specification and return comments in their completed
ballots to w3c-html-review@w3.org. Please send any comments of a
confidential nature in separate email to w3t-html@w3.org, which is
visible to the Team only.</p>

<p>No sooner than 14 days after the end of the review period, the
Director will announce the document's disposition: it may become a W3C
Recommendation (possibly with minor changes), it may revert to Working
Draft status, or it may be dropped as a W3C work item.</p>

<p>Publication as a Proposed Recommendation does not imply endorsement
by the W3C membership.  This is still a draft document and may be
updated, replaced or obsoleted by other documents at any time. It is
inappropriate to cite W3C Proposed Recommendation as other than "work
in progress."</p>

<p>This document has been produced as part of the <a href= 
"http://www.w3.org/MarkUp/">W3C HTML Activity</a>. The goals of
the <a href="http://www.w3.org/MarkUp/Group/">HTML Working
Group</a> <i>(<a href="http://cgi.w3.org/MemberAccess/">members
only</a>)</i> are did">3.1.2 Using Xscussed in the <a href= 
"http://www.w3.org/MarkUp/Group/HTMLcharter">HTML WorkinÅ Group
charter</a> <i>(<a href="http://cgi.w3.org/MemberAccess/">members
only</a>)</i>.</p>

<p>A list of current W3C Recommendations and other technical documents
can be found at <a
href="http://www.w3.org/TR">http://www.w3.org/TR</a>.</p>

<p>Public discussion on <abbr title="HyperText Markup
Language">HTML</abbr> features takes place on the mailing list <a
href="mailto:www-html@w3.org"> www-html@w3.org</a> (<a href=
"http://lists.w3.org/Archives/Public/www-html/">archive</a>). The W3C
staff contact for work on HTML is <a href= "mailto:dsr@w3.org">Dave
Raggett</a>.</p>

<p>Please report errors in this document to <a
href="mailto:www-html-editor@w3.org">www-html-editor@w3.org</a>.</p>

<p>The list of known errors in this specification is available at <a
href="http://www.w3.org/1999/12/PR-xhtml1-19991210-errata">http://www.w3.org/1999/12/PR-xhtml1-19991210-errata</a>.</p>

<h2 class="notoc"><a id="toc" name="toc">Contents</a></h2>

<div class="contents">
<ul class="toc">
<li class="tocline">1. <a href="#xhtml">What is XHTML?</a> 

<ul class="toc">
<li class="tocline">1.1 <a href="#html4">What is HTML 4.0?</a></li>

<li class="tocline">1.2 <a href="#xml">What is XML?</a></li>

<li class="tocline">1.3 <a href="#why">Why the need for XHTML?</a></li>
</ul>
</li>

<li class="tocline">2. <a href="#defs">Definitions</a> 

<ul class="toc">
<li class="tocline">2.1 <a href="#terms">Terminology</a></li>

<li class="tocline">2.2 <a href="#general">General Terms</a></li>
</ul>
</li>

<li class="tocline">3. <a href="#normative">Normative Definition of XHTML 1.0</a>


<ul class="toc">
<li class="tocline">3.1 <a href="#docconf">Document Conformance</a></li>

<li class="tocline">3.2 <a href="#uaconf">User Agent Conformance</a></li>
</ul>
</li>

<li class="toclinE">4. <a href="#diffs">Differences with HTML 4.0</a> 

</li>

<li class="tocline">5. <a href="#issues">Compatibility Issues</a> 

<ul class="toc">
<li class="tocline">5.1 <a href="#media">Internet Media Types</a></li>
</ul>
</li>

<li class="tocline">6. <a href="#future">Future Directions</a> 

<ul class="toc">
<li class="tocline">6.1 <a href="#mods">Modularizing HTML</a></li>

<li class="tocline">6.2 <a href="#extensions">Subsets and Extensibility</a></li>

<li class="tocline">6.3 <a href="#profiles">Document Profiles</a></li>
</ul>
</li>

<li class="tocline"><a href="#dtds">Appendix A. DTDs</a></li>

<li class="tocl@   ><a href="#prohibitions">Appendix B. Element
Prohibitions</a></li>

<li class="tocline"><a href="#guidelines">Appendix C. HTML Compatibility Guidelines</a></li>

<li class="tocline"><a href="#acks">Appendix D. Acknowledgements</a></li>

<li class="tocline"><a href="#refs">Appendix E. References</a></li>
</ul>
</div>

<!--OddPage-->
<h1><a name="xhtml" id="xhtml">1. What is XHTML?</a></h1>

<p>XHTML is a family of current and future document types and modules that
reproduce, subset, and extend HTML 4.0 <a href="#ref-html4">[HTML]</a>. XHTML family document types are <abbr title="Extensible Markup Language">XML</abbr> based,
and ultimately are designed to work in conjunction with XML-based user agents.
The details of this family and its evolution are
discussed in more detail in the section on <a href="#future">Future
Directions</a>. </p>

<p>XHTML 1.0 (this specification) is the first document type in the XHTML
family. It is a reformulation of the three HTML 4.0 document types as
applications of XML 1.0 <a href="#ref-xml"> [XML]</a>. It is intended
to be used as a language for content that is both XML-conforming and, if some
simple <a href="#guidelines">guidelines</a> are followed, 
operates in HTML 4.0 conforming user agents. Developers who migrate
their content to XHTML 1.0 will realize the following benefits:</p>

<ul>
<li>XHTML documents are XML conforming. As such, they are readily viewed,
edited, and validated with standard XML tools.</li>
<li>XHTML documents can be written to
to operate as well or better than they did before in existing
HTML 4.0-conforming user agents as well as in new, XHTML 1.0 conforming user
agents.</li>
<li>XHTML documents can utilize applications (e.g. scripts and applets) that rely
upon either the HTML Document Object Model or the XML Document Object Model <a
href="#ref-dom">[DOM]</a>.</li>
<li>As the XHTML family evolves, documents conforming to XHTML 1.0 will be more
likely to interoperate within and among various XHTML environments.</li>
</ul>

<p>The XHTML family is the next step in the evolution of the Internet. By
migrating to XHTML today, content developers can enter the XML world with all
of its attendant benefits, while still remaining confident in their
content's backward and future compatibility.</p>

<h2><a name="html4" id="html4">1.1 What is HTML 4.0?</a></h2>

<p>HTML 4.0 <a href="#ref-html4">[HTML]</a> is an <abbr title="Standard
Generalized Markup Language">SGML</abbr> (Standard
Generalized Markup Lantion conforming to
International Standard <abbr title="Organization for International
Standardization">ISO</abbr> 8879, and is widely regarded as the
standard publishing language of the World Wide Web.</p>

<p>SGML is a language for describing markup languages,
particularly those used in electronic document exchange, document
management, and document publishing. HTML is an example of a
language defined in SGML.</p>

<p>SGML has been around since the middle 1980's and has remained
quite stable. Much of this stability stems from the fact that the
language is both feature-rich and flexible. This flexibility,
however, comes at a price, and that price is a level of
complexity that has inhibited its adoption in a diversity of
environments, including the World Wide Web.</p>

<p>HTML, as originally conceived, was to be a language for the
exchange of scientific and other technical documents, suitable
for use by non-document specialists. HTML addressed the problem
of SGML complexity by specifying a small set of structural and
semantic tags suitable for authoring relatively simple documents.
In addition to simplifying the document structure, HTML added
support for hypertext. Multimedia capabilities were added
later.</p>

<p>In a remarkably short space of time, HTML became wildly
popular and rapidly outgrew its original purpose. Since HTML's
inception, there has been rapid invention of new elements for use
within HTML (as a standard) and for adapting HTML to vertical,
highly specialized, markets. This plethora of new elements has
led to compatibility problems for documents across different
platf678901234567890123456heterogeneity of both software and platforms rapidly
proliferate, it is clear that the suitability of 'classic' HTML
4.0 for use on these platforms is somewhat limited.</p>

<h2><a }ame="xml" id="xml">1.2 What is XML?</a></h2>

<p>XML<sup>&#8482;</sup> is the shorthand for Extensible Markup
Language, and is an acronym of Extensible Markup Language <a
href="#ref-xml">[XML]</a>.</p>

<p>XML was conceived as a means of regaining the power and
flexibility of SGML without most of its complexity. Although a
restricted form of SGML, XML nonetheless preserves most of SGML's
power and richness, and yet still retains all of SGML's commonly
used features.</p>

<p>While retaining these beneficial features, XML removes many of
the more complex features of SGML that make the authoring and
design of suitable software both difficult and costly.</p>

<h2><a name="why" id="why">1.3 Why the need for XHTML?</a></h2>

<p>The benefits of migrating to XHTML 1.0 are described above. Some of the
benefits of migrating to XHTML in general are:</p>

<ul>
<li>Document developers and user agent designers are constantly
discovering new ways to express their ideas through new markup. In XML, it is
relatively easy to introduce new elements or additional element
attributes.  The XHTML family is designed to accommodate these extensions
through XHTML modules and techniques for developing new XHTML-conforming
modules (described in the forthcoming XHTML Modularization specification).
These modules will permit the combination of existing and
new feature sets when developing content and when designing new user
agents.</li>

<li>Alternate ways of accessing the Internet are constantly being
introduced.  Some estimates indicate that by the year 2002, 75% of
Internet document viewing will be carried out on these alternate
platforms.  The XHTML family is designed with general user agent
interoperability in mind. Through a new user agent and document profiling
mechanism, servers, proxies, and user agents will be able to perform
best effort content transformation. Ultimately, it will be possible to
develop XHTML-conforming content that is usable by any XHTML-conforming
user agent.</li>

</ul>
<!--OddPage-->
<h1><a name="defs" id="defs">2. Definitions</a></h1>

<h2><a name="terms" id="terms">2.1 Terminology</a></h2>

<p>The following terms are used in this specification. These
terms extend the definitions in <a href="#ref-rfc2119">
[RFC2119]</a> in ways based upon similar definitions in ISO/<abbr
title="International Electro-technical Commission">IEC</abbr>
9945-1:1990 <a href="#ref-posix">[POSIX.1]</a>:</p>

<dl>
<dt>Implementation-defined</dt>

<dd>A value or behavior is implementation-defined when it is left
to the implementation to define [and document] the corresponding
requirements for correct document construction.</dd>

<dt>May</dt>

<dd>With respect to implementations, the word "may" is to be
interpreted as an optional feature that is not required in this
specification but can be provided. With respect to <a href= 
"#docconf">Document Conformance</a>, the word "may" means that
the optional feature must not be used. The term "optional" has
the same definition as "may".</dd>

<dt>Must</dt>

<dd>In this specification, the word "must" is to be interpreted
as a mandatory requirement on the implementation or on Strictly
Conforming XHTML Documents, depending upon the context. The term
"shall" has the same definition as "must".</dd>

<dt>Reserved</dt>

<dd>A value or behavior is unspecified, but it is not allowed to
be used by Conforming Documents nor to be supported by a
Conforming User Agents.</dd>

<dt>Should</dt>

<dd>With respect to implementations, the word "should" is to be
interpreted as an implementation recommendation, but not a
requirement. With respect to documents, the word "should" is to
be interpreted as recommended programming practice for documents
and a requirement for Strictly Conforming XHTML Documents.</dd>

<dt>Supported</dt>

<dd>Certain facilities in this specification are optional. If a
facility is supported, it behaves as specified by this
specification.</dd>

<dt>Unspecified</dt>

<dd>When a value or behavior is unspecified, the specification
defines no portability requirements for a facility on an
implementation even when faced with a document Qhat uses the
facility. A document that requires specific behavior in such an
instance, rather than tolerating any behavior when using that
facility, is not a Strictly Conforming XHTML Document.</dd>
</dl>

<h2><a name="general" id="general">2.2 General Terms</a></h2>

<dl>
<dt>Attribute</dt>

<dd>An attribute is a parameter to an element declared in the
DTD. An attribute's type and value range, including a possible
default value, are defined in the DTD.</dd>

<dt>DTD</dt>

<dd>A DTD, or document type definition, is a collection of XML
declarations that, as a collection, defines the legal structure,
<span class="term">elements</span>, and <span class="term">
attributes</span> that are available for use in a document that
complies to the DTD.</dd>

<dt>Document</dt>

<dd>A document is a stream of data that, after being combined
with any other streams it references, is structured such that it
holds information contained within <span class="term">
elements</span> that are organized as defined in the associated
<span class="term">DTD</span>. See <a href="#docconf">Document
Conformance</a> for more information.</dd>

<dt>Element</dt>

<dd>An element is a document structuring unit declared in the
<span class="term">DTD</span>. The element's content model is
defined in the <span class="term">DTD</span>, and additional
semantics may be defined in the prose description of the
element.</dd>

<dt><a name="facilities" id="facilities">Facilities</a></dt>

<dd>Functionality includes <span class="term">elements</span>,
<span class="term">attributes</span>, and the semantics
associated with those <span class="term">elements</span> and
<span class="term">attributes</span>. An implementation
supporting that functionality is said to provide the necessary
facilities.</dd>

<dt>Implementation</dt>

<dd>An implementation is a system that provides collection of
<span class="term">facilities</span> and services that supports
this specification. See <a href="#uaconf">User Agent
Conformance</a> for more information.</dd>

<dt>Parsing</dt>

<dd>Parsing is the act whereby a <span class="term">
document</span> is scanned, and the information contained within
the <span class="term">document</span> is filtered into the
context of the <span class="term">elements</span> in which the
information is structured.</dd>

<dt>Rendering</dt>

<dd>Rendering is the act whereby the information in a <span
class="term">document</span> is presented. This presentation is
done in the form most appropriate to the environment (e.g.
aurally, visually, in print).</dd>

<dt>User Agent</dt>

<dd>A user agent is an <span class="term">implementation</span>
that retrieves and processes XHTML documents. See <a href=
"#uaconf">User Agent Conformance</a> for more information.</dd>

<dt>Validation</dt>

<dd>Validation is a process whereby <span class="term">
documents</span> are verified against the associated <span class= 
"term">DTD</span>, ensuring that the structure, use of <span
class="term">elements</span>, and use of <span class="term">
attributes</span> are consistent with the definitions in the
<span class="term">DTD</span>.</dd>

<dt><a name="wellformed" id="wellformed">Well-formed</a></dt>

<dd>A <span class="term">document</span> is well-formed when it
is structured according to the rules defined in <a href= 
"http://www.w3.org/TR/REC-xml#sec-well-formed">Section 2.1</a> of
the XML 1.0 Recommendation <a href="#ref-xml">[XML]</a>.
Basically, this definition states that elements, delimited by
their start and end tags, are nested properly within one
another.</dd>
</dl>

<!--OddPage-->
<h1><a name="normative" id="normative">3. Normative Definition of
XHTML 1.0</a></h1>

<h2><a name="docconf" id="docconf">3.1 Document
Conformance</a></h2>

<p>This version of XHTML provides a definition of strictly
conforming XHTML documents, which are restricted to tags and
attributes from the XHTML namespace. See <a href=
"#well-formed">Section 3.1.2</a> for information on using XHTML
with other namespaces, for insˇ nce, to include metadata
expressed in <abbr title="Resource Description Format">RDF</abbr> within XHTML documents.</p>

<h3><a name="strict" id="strict">3.1.1 Strictly Conforming
Documents</a></h3>

<p>A Strictly Conforming XHTML Document is a document that
requires only the facilities described as mandatory in this
specification. Such a document must meet all of the following
criteria:</p>

<ol>
<li>
<p>It must validate against one of the three DTDs found in <a
href="#dtds">Appendix&#160;A</a>.</p>
</li>

<li>
<p>The root element of the document must be <code>
&lt;html&gt;</code>.</p>
</li>

<li>
<p>The root element of the document must designate the XHTML
namespace using the <code>xmlns</code> attribute <a href= 
"#ref-xmlns">[XMLNAMES]</a>. The namespace for XHTML is
defined to be 
<code>http://www.w3.org/1999/xhtml</code>.</p>
</li>

<li>
<p>There must be a DOCTYPE declaration in the document prior to
the root element. The public identifier included in
the DOCTYPE declaration must reference one of the three DTDs
found in <a href="#dtds">Appendix&#160;A</a> using the respective
Formal Public Identifier. The system identifier may be changed to reflect
local system conventions.</p>

<pre>
&lt;!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/1999/PR-xhtml1-19991210/DTD/xhtml1-strict.dtd&gt;

&lt;!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
     "http://www.w3.org/TR/1999/PR-xhtml1-19991210/DTD/xhtml1-transitional.dtd&gt;

&lt;!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN"
     "http://www.w3.org/TR/1999/PR-xhtml1-19991210/DTD/xhtml1-frameset.dtd&gt;
</pre>
</li>
</ol>

<p>Here is an example of a minimal XHTML document.</p>

<div class="good">
<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/1999/PR-xhtml1-19991210/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;
  &lt;head&gt;
    &lt;title&gt;Virtual Library&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;Moved to &lt;a href="http://vlib.org/"&gt;vlib.org&lt;/a&gt;.&lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;</pre>
</div>

<p>Note that in this example, the XML declaration is included. An XML
declaration like the one above is
not required in all XML documents. XHTML document authors are strongly encouraged to use XML declarations in all their documents. Such a declaration is required
when the character encoding of the document is other than the default UTF-8 or
UTF-16.</p>

<h3><a name="well-formed" id="well-formed">3.1.2 Using XHTML with
other namespaces</a></h3>

<p>The XHTML namespace may be used with other XML namespaces
as per <a href="#ref-xmlns">[XMLNAMES]</a>, although such
documents are not strictly conforming XHTML 1.0 documents as
defined above. Future work by W3C will address ways to specify
conformance for documents involving multiple namespaces.</p>

<p>The following example shows the way in which XHTML 1.0 could
be used in conjunction with the MathML Recommendation:</p>

<div class="good">
<pre>
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"&gt;
  &lt;head&gt;
    &lt;title&gt;A Math Example&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;The fo^lowing is MathML markup:&lt;/p&gt;
    &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt;
      &lt;apply&gt; &lt;log/&gt;
        &lt;logbase&gt;
          &lt;cn&gt; 3 &lt;/cn&gt;
        &lt;/logbase&gt;
        &lt;ci&gt; x &lt;/ci&gt;
      &lt;/apply&gt;
    &lt;/math&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>
</div>

<p>The following example shows the way in which XHTML 1.0 markup
could be incorporated into another XML namespace:</p>

<div class="good">
<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!-- initially, the default namespace is "books" --&gt;
&lt;book xmlns='urn:loc.gov:books'
    xmlns:isbn='urn:ISBN:0-395-36341-6' xml:lang="en" lang="en"&gt;
  &lt;title&gt;Cheaper by the Dozen&lt;/title&gt;
  &lt;isbn:number&gt;1568491379&lt;/isbn:number&gt;
  &lt;notes&gt;
    &lt;!-- make HTML the default namespace for a hypertext commentary --&gt;
    &lt;p xmlns='http://www.w3.org/1999/xhtml'&gt;
        This is also available &lt;a href="http://www.w3.org/"&gt;online&lt;/a&gt;.
    &lt;/p&gt;
  &lt;/notes&gt;
&lt;/book&gt;
</pre>
</div>

<h2><a name="uaconf" id="uaconf">3.2 User Agent
Conformance</a></h2>

<p>A conforming user agent must meet all of the following
criteria:</p>

<ol>
<li>In order to be consistent with the XML 1.0 Recommendation <a
href="#ref-xml">[XML]</a>, the user agent must parse and evaluate
an XHTML document for well-formedness. If the user agent claims
to be a validating user agent, it must also validate documents
against their referenced DTDs according to <a href="#ref-xml">
[XML]</a>.</li>

<li>When the user agent claims to support <a href="#facilities">
facilities</a> defined within this specification or required by
this specification through normative reference, it must do so in
ways consistent with the facilities' definition.</li>

<li>When a user agent processes an XHTML document as generic XML,
it shall only recognize attributes of type
<code>ID</code> (e.g. the <code>id</code> attribute on most XHTML elements)
as fragment identifiers.</li>

<li>If a user agent encounters an element it does not recognize,
it must render the element's content.</li>

<li>If a user agent encounters an attribute it does not
recognize, it must ignore the entire attribute specification
(i.e., the attribute and its value).</li>

<li>If a user agent encounters an attribute value it doesn't
recognize, it must use the default attribute value.</li>

<li>If it encounters an entity reference (other than one
of the predefined entities) for which the User Agent has 
processed no declaration (which could happen if the declaration
is in the external subset which the User Agent hasn't read), the entity 
reference should be rendered as the characters (starting
with the ampersand and ending with the semi-colon) that
make up the entity reference.</li>

<li>When rendering content, User Agents that encounter 
characters or character entity references that are recognized but not renderable should display the document in such a way that it is obvious to the user that normal rendering has not taken place.</li>

<li>
The following characters are defined in [XML] as whitespace characters:

<ul>
<li>Space (&amp;#x0020;)</li>
<li>Tab (&amp;#x0009;)</li>
<li>Carriage return (&amp;#x000D;)</li>
<li>Line feed (&amp;#x000A;)</li>
</ul>

<p>
The XML processor normalizes different system's line end codes into one
single line-feed character, that is passed up to the application. The XHTML
user agent in addition, must treat the following characters as whitespace:
</p>

<ul>
<li>Form feed (&amp;#x000C;)</li>
<li>Zero-width space (&amp;#x200B;)</li>
</ul>

<p>
In elements where the 'xml:space' attribute is set to 'preserve', the user
agent must leave all whitespace characters intact (with the exception of
leading and trailing whitespace characters, which should be removed).
Otherwise, whitespace
is handled according to the following rules:
</p>

<ul>
<li>
All whitespace surrounding block elements should be removed.
</li>
<li>
Comments are removed entirely and do not affect whitespace handling. One
whitespace character on either side of a comment is treated as two white
space characters.
</li>
<li>
Leading and trailing whitespace inside a block element must be removed.
</li>
<li>Line feed characters within a block element must be converted into a
space (except when the 'xml:space' attribute is set to 'preserve').
</li>
<li>
A sequence of white space characters must be reduced to a single space
character (except when the 'xml:space' attribute is set to 'preserve').
</li>
<li>
With regard to rendition,
the User Agent should render the content in a
manner appropriate to the language in which the content is written.
In languages whose primary script is Latinate, the ASCII space
character is typically used to encode both grammatical word boundaries and
typographic whitespace; in languages whose script is related to Nagari
(e.g., Sanskrit, Thai, etc.), grammatical boundaries may be encoded using
the ZW 'space' character, but will not typically be represented by
typographic whitespace in rendered output; languages using Arabiform scripts
may encode typographic whitespace using a space character, but may also use
the ZW space character to delimit 'internal' grammatical boundaries (what
look like words in Arabic to an English eye frequently encode several words,
e.g. 'kitAbuhum' = 'kitAbu-hum' = 'book them' == their book); and languages
in the Chinese script tradition typically neither encode such delimiters nor
use typographic whitespace in this way. 
</li>
</ul>

<p>Whitespace in attribute values is processed according to <a
href="#ref-xml">[Xother than those decML]</a>.</p>
</li>
</ol>

<!--OddPage-->
<h1><a name="diffs" id="diffs">4. Differences with HTML
4.0</a></h1>

<p>Due to the fact that XHTML is an XML application, certain
practices that were perfectly legal in SGML-based HTML 4.0 <a
href="#ref-html4">[HTML]</a> must be changed.</p>

<h2><a name="h-4.1" id="h-4.1">4.1 Documents must be
well-formed</a></h2>

<p><a href="#wellformed">Well-formedness</a> is a new concept
introduced by <a href="#ref-xml">[XML]</a>. Essentially this
means that all elements must either have closing tags or be
written in a special form (as described below), and that all the
elements must nest.</p>

<p>Although overlapping is illegal in SGML, it was widely
tolerated in existing browsers.</p>

<div class="good">
<p><strong><em>CORRECT: nested elements.</em></strong></p>

<p>&lt;p&gt;here is an emphasized
&lt;em&gt;paragraph&lt;/em&gt;.&lt;/p&gt;</p>
</div>

<div class="bad">
<p><strong><em>INCORRECT: overlapping elements</em></strong></p>

<p>&lt;p&gt;here is an emphasized
&lt;em&gt;paragraph.&lt;/p&gt;&lt;/em&gt;</p>
</div>

<h2><a name="h-4.2" id="h-4.2">4.2 Element and attribute
names must be in lower case</a></h2>

<p>XHTML documents must use lower case for all HTML element and
attribute names. This difference is necessary because XML is
case-sensitive e.g. &lt;li&gt; and &lt;LI&gt; are different
tags.</p>

<h2><a name="h-4.3" id="h-4.3">4.3 For non-empty elements,
end tags are required</a></h2>

<p>In SGML-based HTML 4.0 certain elements were permitted to omit
the end tag; with the elements that followed implying closure.
This omission is not permitted in XML-based XHTML. All elements
other than thoseLdeclared in the DTD as <code>EMPTY</code> must
have an end tag.</p>

<div class="good">
<p><strong><em>CORRECT: terminated elements</em></strong></p>

<p>&lt;p&gt;here is a paragraph.&lt;/p&gt;&lt;p&gt;here is
another paragraph.&lt;/p&gt;</p>
</div>

<div class="bad">
<p><strong><em>INCORRECT: unterminated elements</em></strong></p>

<p>&lt;p&gt;here is a paragraph.&lt;p&gt;here is another
paragraph.</p>
</div>

<h2><a name="h-4.4" id="h-4.4">4.4 Attribute values must
always be quoted</a></h2>

<p>All attribute values must be quoted, even those which appear
to be numeric.</p>

<div class="good">
<p><strong><em>CORRECT: quoted attribute values</em></strong></p>

<p>&lt;table rows="3"&gt;</p>
</div>

<div class="bad">
<p><strong><em>INCORRECT: unquoted attribute values</em></strong></p>

<p>&lt;table rows=3&gt;</p>
</div>

<h2><a name="h-4.5" id="h-4.5">4.5 Attribute
Minimization</a></h2>

<p>XML does not support attribute minimization. Attribute-value
pairs must be written in full. Attribute names such as <code>
compact</code> and <code>checked</code> cannot occur in elements
without their value being specified.</p>

<div class="good">
<p><strong><em>CORRECT: unminimized attributes</em></strong></p>

<p>&lt;dl compact="compact"&gt;</p>
</div>

<div class="bad">
<p><strong><em>INCORRECT: minimized attributes</em></strong></p>

<p>&lt;dl compact&gt;</p>
</div>

<h2><a name="h-4.6" id="h-4.6">4.6 Empty Elements</a></h2>

<p>Empty elements must either have an end tag or the start tag must end with <code>/&gt;</code>. For instance,
<code>&lt;br/&gt;</code> or <code>&lt;hr&gt;&lt;/hr&gt;</code>. See <a
href="#guidelines">HTML Compatibility Guidelines</a> for information on ways to
ensure this is backward compatible wÄth HTML 4.0 user agets.</p>

<div class="good">
<p><strong><em>CORRECT: terminated empty tags</em></strong></p>

<p>&lt;br/&gt;&lt;hr/&gt;</p>
</div>

<div class="bad">
<p><strong><em>INCORRECT: unterminated empty tags</em></strong></p>

<p>&lt;br&gt;&lt;hr&gt;</p>
</div>

<h2><a name="h-4.7" id="h-4.7">4.7 Whitespace handling in
attribute values</a></h2>

<p>In attribute values, user agents will st<!DOCTYPE root SYSTEM "/root>
ternal.ent">
<this_is_a_very_large_qualified_name_0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345:78901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678W012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890