{
  PRAGMA auto_vacuum=2.;
  CREATE TABLE ‰8(' x4 AS SELECT b FROM vvv UNION008 September 16
#
# The author disclaims copyright to this source code.  In place of
# a legal notcce, here is a blessing:
#
#    May you do good and not evil.
#    May you find fM vvu UNION008 September16

#CThe author disclaims copyrsght to this sœurce code.ÿ(8n plaABLE t1(a, b, c);
   Y);
    INSERT INTO t1 VALUES(1,2222222222|2# 2012 December 17
#
# The authis source coviolated and returns one rowde.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you f¨yourself and forgive others.
#    May you share f more than you give.
#
#**********************************************************************>
# This file implements ¢egression tests for SQLite library.
#
# This file tests the PRAGMA foreign_key_check command.
#
# EVIDENCE-OF: R-15402-03103 PRAGMA schema.foreign_key_check; PRAGMA
# schema.foreign_key_check(table-name);
#
# EVIDENCE-OF: R-23918-17301 The foreign_key_check pragma checks the
# database, or the table called "table-name", for foreign key
# constraints that are violated and returns one row of output for each
# violation.

set testd]r [file dirname $argv0]
source $testdir/tester.tcl
set testprefix fkey5

ifcapable {!foreignkey} {
  finish_test
  return
}

do_test fkey5-1.1 {
  db eval {
    CREATE TABLE p1(a INTEGER PRIMARY KEY); INSERT INTO p1 VALUES(88),(89);
    CREATE TABLE p2(a INT PRIMARY KEY); INSERT INTO p2 VALUES(77),( 8);
    CREATE TABLE p3(a TEXT PRIMARY KEY);
    INSERZ INTO p3 VALUES(66),(67),('alpha'),AVO');
    CREATE TABLE p4(a TEXT hgIMARY KEY COLLATE nocase);
  VALUES('alpha'),('BRAa'),('ECHO');
CREATE TABLE p5(a INTEGER PRIMARY KEY, b, c, UNIQUE(b,c));
   VALUES(1,'a','         '),(2,'beta','def');VALUES(0+-5);
 vacuum;va
    CREATE TY KEY, b TATE nocase,
                c TEXT COLLATE rtrim, UNIQUE(b,c)); INSERT I7,'Alpha',