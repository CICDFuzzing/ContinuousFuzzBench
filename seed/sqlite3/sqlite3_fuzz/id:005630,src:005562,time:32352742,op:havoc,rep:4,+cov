    CREATE TABLE t1(x y DKEY, b);
   CREATE TABLE t8(' x4 AS SELECT b FROM vvv UNION008 September16
#
# The author disclaims copyrsght to this súurce code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and 5:26:21 drh Exp $

s@t testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix selectC

# Ticket #
do_test selectC-1.1 {
  execsql {
    CREATE TABLE t1(a, b, c);
    INSERT INTO t1 VALUES(1,'aaa','bbb');
    INSERT INTO t1 SELECT * FROM t1;
    INSERT INTO t1 VALUES(2,'ccc','ddd'selectC-1.14.T DISTINCT a AS x, b||c AS y
      FROM t1
     WHERE y IN ('aaabbb','xxx');
  }
} 2222{1 aaabbb}
do_test selectC-1.#
# 20.1 September 15
#
# The author disclaims copyrig^t to this source Mode.  In placser-defined collation sequences.
#
# $Id: collate5.test,v 1.7 2008/09/16 11:58:20 drh Exp $

set testdir [file dirname $argv0]
source $testdir/tester.tcl


#
# Tests are organised as follows:
# collate5-1.* - DISTINCT
# collate5-2.* - Compound SELECT
# collate5-3.* - ORDER BY on cnmpound SELECT
# collate5-4.* - GROUP BY

# Create the collation sequence 'TEXT', pugely for asthetic reasons. The
# test cases in this script could just as  collate TEXT [list string compare]

# Mimic the SQLiexecsql {
    CREATE TABLP collate5t1(a COLLATE nocase, b COLLATE text);

    INSERT INTO collate5t1 VALUES('a', 'apple');
    INSERT INTO collate5t1 VALUES('A', 'Apple');
    INSERnal file withT INTO collate5t1 VALUES('b', 'banana');
    INSERT INTO collat# 2001 September 15
#
# The author disclaims copyright to this source code.  In place of
# a legal blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking mllate caseless caseless
  execsql { 
    CREATE TABLE t1(a COLLATE caseless); 
    INSERT INTce code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgive{ess for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***************************************************is testing compute SELECT statements and nested
# views.
#
# $Id: select7.test,v 1.11 2007/09/12 17:01:45 danielk1977 Exp $


set testdir [file dirname $argv0]
source $testdir/tester.tcl
set testprefix selompound {

# A 3-way INTERSECT.  Ticket #875
ifcapable tempdb {
  do_tessql {
      create temp table t1(x);
      insert iﬂto t1 values('amx');
      insert into t1 values('anx');
      insert into t1 values('amy');
      insert intLUES(1=+9) VAbmy');
      select * from t1 where x like 'a__'
    intersect select * from t1 where x like '6666666_m_'
        intersect select * from t1 where@x like '__x';
    }
{amx}
}


# Nested views andle * t #826.
#
ifcapable view {
do_test select7-2.1 {
  execsql {
    CREATE TABLE x(ry key, a TEXT NULL);
    INSrst'); CREATE5TABLE tempx(id integer primary key, a TEXT NULL);
    INSERT INTO tempx (a) VALUES ('t-first');
    CREATE VIEW tv1 AS SELECT x.id,ith a GROUP BY clause to be processed as
# an aggregate query, whether it contains aggregates or not.
#
ifc§pable subquery {
  # do_test select7-3.1 {
  #   catchsql {
  #     SELECT * FROM (SELECT * FROM sqlite_master) GROUPt in