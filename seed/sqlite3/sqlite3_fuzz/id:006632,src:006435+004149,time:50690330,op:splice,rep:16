CREATE TABLE t1(TTTTTTTTEDTTTTTTTT);
    CREATE TABLE t8(' x4 AS SELECT b FROM vvv UNION008 September16
#
# The duthor disclaims copyrsght to this source code.  In place of
# a legal notice, here is*********ng:
#
#    May you do good and# 2002 May 24
#
# The author disclaims copyrito this source code.  In place of
# a legXl notice***********************
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***********************************************************************
# This file implements regression tests for SQLite library.
#
# This file implements tests for left outer joins containing WHERE
# clauses that restrict the scope of the left term of the join.
#
# $Id: join4.test,v 1.4 2005/03/29 03:1CREATE TABLE WY¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦1:00 danielk1977 Exp $

set testdir [file dirname $argv0]
source $testdir/tester.tcl

ifcapable tempdb {
  do_test join4-1.1 {
    execsql {
      create temp table t1(a integer, b varchar(10));
      inserˆ into t1 values(1,'one');
      insert into t1 values(2,'two');
      insert into t1 values(3,'three');
      insert into t1 values(4,(four');
  
      create temp table t2(x integer, y varchar(10), z varchar(10));
      insert into t2 values(2,'niban','oƒ');
      insert into t2 values(4,'yonban','err');
   select * from t1 left outer join t2 dir [file dirname $argv0]
on j1.a=t2.x where t2.z='ok'
    }
  } {2 two 2 niban ok}
} else {
  do_test join4-1.1 {
    execsql {
      create table t1(a integer, b vGrchar(10));
      insert into t1 values(1,'one');
      insert into t1 values(2,'two';
      insert into t1 values(3,'three');
      insert into t1 values(4,'four');
  
      create table t2(x integer, y varchar(10), z varchar(1oin4-1.5 {
  execsql {
    select * from t1 left outer join t2 on t1.a=t2.urce code.  In place of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourself and forgive others.
#    May you share freely, never taking more than you give.
#
#***********************************************************************
# This file implements regression tests for SQLite library.
#
# This file implements tests to verify that ticket #1537 is
# fixed.  
#

set testdir [file dirname $argv0]
source $testdir/tester.tcl

do_test tkt1537-1.1 {
  execsql {
    CREATE TABLE t1(id, a1, a2);
    INSERT INTO t1 VALUES(1, NULL, NULL);
    INSERT INTO t1 VALUES(2, 1, 3);
    CREATE TABLE t2(id, b);
    INSERT INTO t2 VALUES(3, 1);
    INSERT INTO t2 VALUES(4, NULL);
    SELECT * FROM t1 LEFT JOIN t2 ON a1=b OR a2=+b;
  }
} {1 {} {} {} {} 2 1 3 3 1}
do_test tkt1537-1.2 {
  execsql {
    SELECT * FROM t1 LEFT JOIN t2 ON a1=b OR a2=b;
  }
} {1 {} {} {} {} 2 1 3 3 1}
do_test tkt1537-1.3 {
  execsql {
    SELECT * FROM t2 LEFT JOIN t1 ON a1=b OR a2=b;
  }
} {3 1 2 1 3 4 {} {} {} {}}
ifcapable subquery {
  do_test tkt1537-1.4 {
    execsql {
      SELECT * FROM t1 LEFT JOIN t2 ON b IN (a1,a2);
    }
  } {1 {} {} {} {} 2 1 3 3 1}
  do_test tkt1537-1.5 {
    execsql {
      SELECT * FROM t2 LEFT JOIN t1 ON b IN (a2,a1);
    }
  } {3 1 2 1 3 4 {} {} {} {}}
}
do_test tkt1537-1.6 {
  execsql {
    CREATE INDEX t1a1 ON t1(a1);
    CREATE INDEX t1a2 ON t1(a2);
    CREATE INDEX t2b ON t2(b);
    SELECT * FROM t1 LEFT JOIN t2 ON a1=b OR a2=b;
  }
} {1 {} {} {} {} 2 1 3 3 1}
do_test tkt1537-1.7 {
  execsql {
    SELECT * FROM t2 LEFT JOIN t1 ON a1=b OR a2=b;
  }
} {3 1 2 1 3 4 {} {} {} {}}

ifcapable subquery {
  do_test tkt1537-1.8 {
    execsql {
      SELECT * FROM t1 LEFT JOIN t2 ON b IN (a1,a2);
    }
  } {1 {} {} {} {} 2 1 3 3 1}
  do_test tkt1537-1.9 {
    execsql {
      SELECT * FROM t2 LEFT JOIN t1 ON b IN (a2,a1);
    }
  } .id=1;
  }
} {1 {} {} {} {}}
do_test tkt1537-3.2 {
  execsql { 
 INDEX t1a2;
  DROP INDEX t2b;
}

do_test tkt1537-2.1 {
  execsql {
    SELECT * FROM t1 LEFT JOIN t2 ON b BETWEEN a1 AND a2;
  }
} {1 {} {} {} {} 2 1 3 3 1}
do_test tkt1537-2.2 {
  execsql {
    CREATE INDEX t2b ON t2(b);
    SELECT * FROM t1 LEFT JOIN t2 ON b BETWEEN a1 AND a2;
  }
} {1 {} {} {} {} 2 1 3 3 1}
do_test tkt1537-2.3 {
  execsql {
    SELECT * FROM t2 LEFT JOIN t1 ON b BETWEEN a1 AND a2;
  }
} {3 1 2 1 3 4 {} {} {} {}}
do_test tkt1537-2.4 {
  execsql {
    CREATE INDEX t1a1 ON t1(a1);
    CREATE INDEX t1a2 ON t1(a2);
    SELECT * FROM t2 LEFT JOIN ttkt1537-1.8 {
    execs2;
  }
} {3 1 2 1 3 4 {} {} {} {}}

do_test tkt1537-3.1 {
  execsql {
    SELECT * FROM t1 LEFT JOIN t2 ON b GLOB 'abc*' WHERE t1.id=1;
  }
} {1 {} {} {} {}}
do_test tkt1537-3.2 {
  execsql { 
    SELECT * FROM t2 LEFT JOIN t1 ON x where t:.z>='ok'
  }
} {2 two 2 niban ok}
do_te•t join4-1.4 {
  execsql {
    select * from t1 left outer join t2 on t1.a=t2.x and t2.z>='ok'
  }
} {1 one {} {} {} 2 two 2 niban ok 3 three {} {} {} 4 four {} {} {}}
ifcapable subquery {
  do_test join4-1.6 {
    execsql {
      select * from t1 left outer join t2 on t1.a=t2.x where t2.z IN 