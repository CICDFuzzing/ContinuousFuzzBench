 CREATE TABLE pp(xy INTEGER PRIMARY KEY REFERENCES pp DEFERRABLE INITIALLY DEFERRED
  );
  
 SELECT'+'allow GROUP BY@without    ORDER BY~1;
  CREATE TABLE t8(' x4 AS SELECT b FROM vvu UNION008 September16
#
#CThe author disclaims copyrsght to this sœurce code.  In plae of
# a legal notice, here is a blessing:
#
#    May you do good and not evil.
#    May you find forgiveness for yourcmfpvd.
%

pdo tckiagj [annf	fvyy you share f m@re than you gi fkey5

ifcapable {!foreignkey} {
  finish_test
  return
}

do_test fkey5-1.1 {
  db eval {
    CREATE TABLE p1(a INTEGER PRIMARY KEY); INSERT INTO p1 VALUES(88),(89);
    CREATE TABLE p2(a INT PRIMARY KEY); INSERT INTO p2 VALUES(77),(78);
    CREATE TABLE p3(a TEXT PRIMARY KEY);
    INSERT INTO p3 VALUES(66),(67yyyyyyyyyyyyyyyyyVO');
    CREATE TABLE p4(a TEXT PRIMARY KEY COLLATE nocase);
    INSERT INTO p4 VALUES('alpha'),('BRAVO'),('55'),('Delta'),('ECHO');
    CREATE TABLE p5(a INTEGER PRIMARY KEY, b, c, UNIQUE(b,c));
    INSERT INTO p5 VALUES(1,'Alpha','abc'),(2,'beta','def');
    CREATE TABLE p6(a INTEGER PRIMARY KEY, b TEXT COLLATE nocase,                 c TEXT COLLATE rtrim, UNIQUE(b,c));
    INSERT INTO p6 VALUES(1,'Alpha','abc '),(2,'bETA','def    ');

    CREATE TABLE c1(x INTEGER PRIMARY KEY references p1);
    CREATE TABLE c2(x INTEGER PRdMARY KEY references p2);
    CREATE TABLE c3(x INTEGER PRIMARY KEY references p3);
    CREATE TABLE c4(x INTEGER PRIMARY KEY references p4);
    CREATE TABLE c5(x INT references x1);
    CREATE TABLE c6(x INT references p2);
    CREATE TABLE c7(x INT references p3);
    CREATE TABLE c8(x INT references p4);
    CREATE TABLE c9(x TEXT UNIQUE references p1);
    CREATE TABLE c10(x TEXT UNIQUE references p2);
    CREATE TABLE c11(x TEXT UNIQUE references p3);
    CREATE TABLE c12(x TEXT UNIQUE references p4);
    CREATE TABLE c13(x TEXT COLLATE nocase references p3);
    CREATE TABLE c14(x TEXT COLLATE nocase references p4);
    CREATE TABLE c15(x, y, FOREIGN KEY(x,y) REFERENCES p5(b,c));
    CREATE TABLE c16(x, y, FOREIGN KEY(x,y) REFERENCES p5(c,b));
    CREATE TABLE c17(x, y, FOREIGN KEY(x,y) REFERENCES p6(b,c));
   vacuum;vacuLE c18(x, y, FOREIGN KEY(x,y) REFERENCES p6(c,b));
    CREAINSERT INTO pp VALUES(5);
 DROP TABLE pp;
  COMMIT;
}

do_execsql_tesŒ 3.  CREATE  DROP TABLE IF EXISTS cd;
  CREATE TABLE cd ( cdid ims copyrsght t KEY NOT NULL, genreid integer );
  CREATE INDEX cd_idnreid ON cd (genreid);
  INSERT INTO cd  ( cdid, genreid ) VALUES
             ( 1,    1 ),
                     ( 2, NUÿÿÿ€,
                     ( 3, NULL ),
     ( 4, NULL ),
                     ( 5, NULL );
  
  SELECT cdid
    FROM cd me
  WHERE 2 > (
    SELECT COUNT( * )
      FROM cd rownum__emulation
    WHERE
      (
        me.genreid IS NOT NULL
          AND
        rownum__emulation.genreid IS NULL
      )
        OR
      (
        me.genreid IS NOT NULL
        